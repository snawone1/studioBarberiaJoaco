{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AACA;AASA;AACA;;;AAfA;;;;;;AAiBA,MAAM,OAAO,iKAAA,CAAA,eAAY;AASzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACzC,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,6LAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,6LAAC,iKAAA,CAAA,aAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;KAXM;AAaN,MAAM,eAAe;;IACnB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,iBAAc,AAAD;IAElD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;GArBM;;QAGiC,iKAAA,CAAA,iBAAc;;;AAwBrD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACxC,CAAC;AAGH,MAAM,yBAAW,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,KAAK,CAAA,GAAA,6JAAA,CAAA,QAAW,AAAD;IAErB,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,6LAAC;YAAI,KAAK;YAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;YAAa,GAAG,KAAK;;;;;;;;;;;AAGrE;;AACA,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,6LAAC,oIAAA,CAAA,QAAK;QACJ,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,SAAS,oBAAoB;QAC3C,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,GAAG,OAAO,EAAE;;IACf,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,6LAAC,mKAAA,CAAA,OAAI;QACH,KAAK;QACL,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;;QAfkE;;;;QAAA;;;;AAgBlE,YAAY,WAAW,GAAG;AAE1B,MAAM,gCAAkB,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;;IACpC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM;IAEpD,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP;;QAjBmC;;;;QAAA;;;;AAkBnC,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;KAvDS;AAwDT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 637, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 740, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 806, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 854, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/page-header.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\n\ninterface PageHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  title: string;\n  description?: string;\n  titleClassName?: string;\n  descriptionClassName?: string;\n}\n\nexport function PageHeader({\n  title,\n  description,\n  titleClassName,\n  descriptionClassName,\n  className,\n  ...props\n}: PageHeaderProps) {\n  return (\n    <div className={cn(\"py-12 text-center animate-fade-in\", className)} {...props}>\n      <h1\n        className={cn(\n          \"text-4xl font-bold tracking-tight sm:text-5xl lg:text-6xl font-headline text-foreground\",\n          titleClassName\n        )}\n      >\n        {title}\n      </h1>\n      {description && (\n        <p\n          className={cn(\n            \"mt-4 max-w-2xl mx-auto text-lg text-muted-foreground\",\n            descriptionClassName\n          )}\n        >\n          {description}\n        </p>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AASO,SAAS,WAAW,EACzB,KAAK,EACL,WAAW,EACX,cAAc,EACd,oBAAoB,EACpB,SAAS,EACT,GAAG,OACa;IAChB,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAAa,GAAG,KAAK;;0BAC3E,6LAAC;gBACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2FACA;0BAGD;;;;;;YAEF,6BACC,6LAAC;gBACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;0BAGD;;;;;;;;;;;;AAKX;KA9BgB","debugId":null}},
    {"offset": {"line": 901, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { AppointmentFormValues, SiteSettingsFormValues, StyleAdvisorFormValues, ProductFormValues, ServiceFormValues } from '@/lib/schemas';\nimport { getStyleRecommendationWithServices } from '@/ai/flows/style-recommendation-with-services';\nimport type { Product } from '@/app/products/page';\nimport { revalidatePath } from 'next/cache';\nimport { firestore } from '@/lib/firebase';\nimport { collection, getDocs, addDoc, deleteDoc, doc, Timestamp, updateDoc, getDoc, query, where, orderBy, setDoc } from 'firebase/firestore';\nimport { ALL_TIME_SLOTS } from '@/lib/constants'; \nimport { siteConfig } from '@/config/site';\n\n// Firestore collection references\nconst appointmentsCollectionRef = collection(firestore, 'appointments');\nconst productsCollectionRef = collection(firestore, 'products');\nconst usersCollectionRef = collection(firestore, 'users');\nconst servicesCollectionRef = collection(firestore, 'services');\nconst timeSlotSettingsCollectionRef = collection(firestore, 'timeSlotSettings');\nconst messageTemplatesCollectionRef = collection(firestore, 'messageTemplates');\n\n\n// --- User Types ---\nexport type UserDetail = {\n  id: string; \n  fullName: string;\n  email: string;\n  phoneNumber: string;\n  createdAt: string; \n};\n\n\n// --- Appointment Types ---\nexport type Appointment = {\n  id: string;\n  userId: string;\n  userName?: string;\n  userEmail?: string;\n  userPhone?: string;\n  preferredDate: string; \n  preferredTime: string;\n  services: string[]; \n  message?: string;\n  status: string; \n  createdAt: string; \n};\n\n// --- Service Type ---\nexport type Service = {\n  id: string;\n  name: string;\n  description: string;\n  price: string;\n  createdAt?: string; \n};\n\n// --- Time Slot Settings Types ---\nexport type TimeSlotSetting = {\n  time: string;\n  isActive: boolean;\n};\n\n// --- Message Template Type ---\nexport type MessageTemplate = {\n  id: string; // e.g., 'confirmation', 'cancellation'\n  content: string;\n};\n\n\n// --- User Management Actions ---\nexport async function getUsers(): Promise<UserDetail[]> {\n  console.log(\"Admin: Attempting to fetch users from Firestore...\");\n  try {\n    const q = query(usersCollectionRef, orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    console.log(`Admin: Found ${querySnapshot.docs.length} user documents.`);\n\n    if (querySnapshot.empty) {\n      console.warn(\"Admin: No users found in the 'users' collection or access denied by Firestore security rules.\");\n      return [];\n    }\n\n    const users = querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      let createdAtISO: string;\n\n      if (data.createdAt && typeof data.createdAt === 'string') {\n        createdAtISO = data.createdAt;\n      } else if (data.createdAt && typeof data.createdAt.toDate === 'function') {\n        createdAtISO = data.createdAt.toDate().toISOString();\n      } else {\n        console.warn(`Admin: User ${docSnap.id} has invalid or missing createdAt. Firestore data:`, data.createdAt);\n        createdAtISO = new Date(0).toISOString();\n      }\n      \n      const userDetail: UserDetail = {\n        id: docSnap.id,\n        fullName: data.fullName || 'N/A',\n        email: data.email || 'N/A',\n        phoneNumber: data.phoneNumber || 'N/A',\n        createdAt: createdAtISO,\n      };\n      return userDetail;\n    });\n    console.log(`Admin: Successfully mapped ${users.length} users.`);\n    return users;\n\n  } catch (error: any) {\n    console.error(\"Admin: Error fetching or mapping users from Firestore:\", error);\n    if (error.code === 'failed-precondition') {\n        console.error(\"IMPORTANT: Firestore 'failed-precondition' error for users query. This might mean a composite index is required if you add more complex ordering or filtering. Check Firestore console for index suggestions.\");\n    } else {\n        console.error(\"An unexpected error occurred while fetching users:\", error.message, error.stack);\n    }\n    return [];\n  }\n}\n\n\n// --- Appointment Actions ---\nexport async function submitAppointmentRequest(data: AppointmentFormValues) {\n  console.log(\"Server Action: submitAppointmentRequest received data:\", data);\n  try {\n    const clientPreferredDate = data.preferredDate; \n    \n    const normalizedPreferredDateObject = new Date(clientPreferredDate);\n    normalizedPreferredDateObject.setHours(0, 0, 0, 0); \n    \n    const preferredDateTimestamp = Timestamp.fromDate(normalizedPreferredDateObject);\n    console.log(\"Server Action: Normalized preferredDate to Timestamp:\", preferredDateTimestamp.toDate().toISOString());\n\n    const qCheck = query(\n      appointmentsCollectionRef,\n      where('preferredDate', '==', preferredDateTimestamp),\n      where('preferredTime', '==', data.preferredTime),\n      where('status', 'in', ['pending', 'confirmed'])\n    );\n\n    const existingAppointmentsSnap = await getDocs(qCheck);\n    if (!existingAppointmentsSnap.empty) {\n      console.log(\"Server Action: Double booking detected for\", preferredDateTimestamp.toDate().toISOString(), data.preferredTime);\n      return { success: false, message: 'Este horario ya no está disponible. Por favor, elige otro.' };\n    }\n\n    const appointmentData = {\n      userId: data.userId,\n      preferredDate: preferredDateTimestamp, \n      preferredTime: data.preferredTime,\n      services: data.services,\n      message: data.message || '',\n      status: 'pending', \n      createdAt: Timestamp.now(),\n    };\n    console.log(\"Server Action: Attempting to add appointment to Firestore with data:\", appointmentData);\n    await addDoc(appointmentsCollectionRef, appointmentData);\n    console.log(\"Server Action: Appointment added successfully.\");\n    revalidatePath('/book'); \n    revalidatePath('/admin'); \n    return { success: true, message: 'Solicitud de cita enviada con éxito. Nos pondremos en contacto contigo pronto para confirmar.' };\n  } catch (error) {\n    console.error(\"Server Action: Error submitting appointment to Firestore:\", error);\n    return { success: false, message: 'Error al enviar la solicitud de cita. Por favor, inténtalo de nuevo.' };\n  }\n}\n\nexport async function getAppointments(): Promise<Appointment[]> {\n  console.log(\"Admin: Attempting to fetch appointments from Firestore (with orderBy)...\");\n  try {\n    const qAppointments = query(\n      appointmentsCollectionRef, \n      orderBy('preferredDate', 'desc'), \n      orderBy('createdAt', 'desc') \n    );\n    console.log(\"Admin: Using query with orderBy('preferredDate', 'desc'), orderBy('createdAt', 'desc').\");\n\n    const appointmentSnapshot = await getDocs(qAppointments);\n    console.log(`Admin: Found ${appointmentSnapshot.docs.length} appointment documents in total.`);\n    \n    if (appointmentSnapshot.empty) {\n      console.warn(\"Admin: No appointments matched the query. This could be due to Firestore security rules or no appointments existing.\");\n      return [];\n    }\n\n    const userIds = [...new Set(appointmentSnapshot.docs.map(docSnap => docSnap.data().userId as string).filter(id => !!id))];\n    let usersMap: Map<string, { fullName?: string; email?: string; phoneNumber?: string }> = new Map();\n\n    if (userIds.length > 0) {\n      const MAX_USER_IDS_PER_QUERY = 30; \n      const userBatches: string[][] = [];\n      for (let i = 0; i < userIds.length; i += MAX_USER_IDS_PER_QUERY) {\n        userBatches.push(userIds.slice(i, i + MAX_USER_IDS_PER_QUERY));\n      }\n\n      for (const batchUserIds of userBatches) {\n        if (batchUserIds.length === 0) continue;\n        const qUsers = query(collection(firestore, 'users'), where('uid', 'in', batchUserIds));\n        const userSnapshot = await getDocs(qUsers);\n        userSnapshot.docs.forEach(docSnap => {\n          const userData = docSnap.data();\n          usersMap.set(userData.uid, { \n            fullName: userData.fullName, \n            email: userData.email, \n            phoneNumber: userData.phoneNumber \n          });\n        });\n      }\n    }\n    console.log(`Admin: Fetched details for ${usersMap.size} users.`);\n\n    const appointments = appointmentSnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      let preferredDateISO: string;\n      let createdAtISO: string;\n\n      if (data.preferredDate && typeof data.preferredDate.toDate === 'function') {\n        preferredDateISO = data.preferredDate.toDate().toISOString();\n      } else {\n        console.warn(`Admin: Appointment ${docSnap.id} has invalid or missing preferredDate. Firestore data:`, data.preferredDate);\n        preferredDateISO = new Date(0).toISOString(); \n      }\n\n      if (data.createdAt && typeof data.createdAt.toDate === 'function') {\n        createdAtISO = data.createdAt.toDate().toISOString();\n      } else {\n        console.warn(`Admin: Appointment ${docSnap.id} has invalid or missing createdAt. Firestore data:`, data.createdAt);\n        createdAtISO = new Date(0).toISOString(); \n      }\n      \n      const userDetails = usersMap.get(data.userId) || {};\n\n      const appointment: Appointment = {\n        id: docSnap.id,\n        userId: data.userId || 'Unknown User',\n        userName: userDetails.fullName || 'Nombre no disponible',\n        userEmail: userDetails.email || 'Email no disponible',\n        userPhone: userDetails.phoneNumber || 'Teléfono no disponible',\n        preferredDate: preferredDateISO,\n        preferredTime: data.preferredTime || 'N/A', \n        services: Array.isArray(data.services) ? data.services : [], \n        message: data.message || '',\n        status: data.status || 'unknown', \n        createdAt: createdAtISO,\n      };\n      return appointment;\n    });\n    console.log(`Admin: Successfully mapped ${appointments.length} appointments.`);\n    return appointments; \n\n  } catch (error: any) { \n    console.error(\"Admin: Error fetching or mapping appointments from Firestore:\", error);\n     if (error.code === 'failed-precondition') { \n        console.error(\"IMPORTANT: Firestore 'failed-precondition' error. This OFTEN means a composite index is required for your query (e.g., for orderBy clauses). Check the DETAILED error message in the Firebase/Next.js server console. It usually provides a link to create the missing index if you haven't already or if it's still building.\");\n    } else {\n        console.error(\"An unexpected error occurred while fetching appointments:\", error.message, error.stack);\n    }\n    return [];\n  }\n}\n\nexport async function getUserAppointments(userId: string): Promise<Appointment[]> {\n  console.log(`Server Action: Attempting to fetch appointments for user ID: ${userId}`);\n  if (!userId) {\n    console.warn(\"Server Action: getUserAppointments called with no userId.\");\n    return [];\n  }\n  try {\n    const qUserAppointments = query(\n      appointmentsCollectionRef,\n      where('userId', '==', userId),\n      orderBy('preferredDate', 'desc'),\n      orderBy('createdAt', 'desc')\n    );\n\n    const appointmentSnapshot = await getDocs(qUserAppointments);\n    console.log(`Server Action: Found ${appointmentSnapshot.docs.length} appointments for user ${userId}.`);\n\n    if (appointmentSnapshot.empty) {\n      return [];\n    }\n\n    const appointments = appointmentSnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      let preferredDateISO: string;\n      let createdAtISO: string;\n\n      if (data.preferredDate && typeof data.preferredDate.toDate === 'function') {\n        preferredDateISO = data.preferredDate.toDate().toISOString();\n      } else {\n        preferredDateISO = new Date(0).toISOString();\n      }\n\n      if (data.createdAt && typeof data.createdAt.toDate === 'function') {\n        createdAtISO = data.createdAt.toDate().toISOString();\n      } else {\n        createdAtISO = new Date(0).toISOString();\n      }\n      \n      return {\n        id: docSnap.id,\n        userId: data.userId,\n        // For user's own appointments, we might not need to fetch their name/email/phone again,\n        // but it's included in the Appointment type for consistency.\n        // These fields can be undefined if not fetched.\n        preferredDate: preferredDateISO,\n        preferredTime: data.preferredTime || 'N/A',\n        services: Array.isArray(data.services) ? data.services : [],\n        message: data.message || '',\n        status: data.status || 'unknown',\n        createdAt: createdAtISO,\n      } as Appointment;\n    });\n    console.log(`Server Action: Successfully mapped ${appointments.length} appointments for user ${userId}.`);\n    return appointments;\n\n  } catch (error: any) {\n    console.error(`Server Action: Error fetching appointments for user ${userId}:`, error);\n    if (error.code === 'failed-precondition') {\n      console.error(\"IMPORTANT: Firestore 'failed-precondition' error for user appointments query. A composite index on 'userId' (asc), 'preferredDate' (desc), 'createdAt' (desc) might be required in the 'appointments' collection. Check Firestore console for index suggestions.\");\n    }\n    return [];\n  }\n}\n\nexport async function updateAppointmentStatus(\n  appointmentId: string, \n  newStatus: 'pending' | 'confirmed' | 'cancelled' | 'completed',\n  currentUserId?: string // Optional: for client-side cancellation validation\n) {\n  console.log(`Server Action: updateAppointmentStatus called for ID: ${appointmentId} to status: ${newStatus}. CurrentUserID: ${currentUserId}`);\n  try {\n    const appointmentDocRef = doc(firestore, 'appointments', appointmentId);\n\n    if (currentUserId && newStatus === 'cancelled') {\n      // Client is trying to cancel their own appointment\n      const appointmentSnap = await getDoc(appointmentDocRef);\n      if (!appointmentSnap.exists()) {\n        return { success: false, message: 'La cita no fue encontrada.' };\n      }\n      const appointmentData = appointmentSnap.data();\n      if (appointmentData.userId !== currentUserId) {\n        return { success: false, message: 'No tienes permiso para cancelar esta cita.' };\n      }\n      if (appointmentData.status !== 'pending') {\n        return { success: false, message: 'Solo puedes cancelar citas que estén pendientes.' };\n      }\n      // If all checks pass, proceed to update\n    } else if (currentUserId && newStatus !== 'cancelled') {\n      // Client is trying to change status to something other than cancelled\n      return { success: false, message: 'No tienes permiso para realizar esta acción.' };\n    }\n    // If no currentUserId, assume it's an admin action (or client cancellation checks passed)\n\n    await updateDoc(appointmentDocRef, { status: newStatus });\n    console.log(`Server Action: Appointment ${appointmentId} status updated to ${newStatus} in Firestore.`);\n    revalidatePath('/admin');\n    revalidatePath('/book'); // Also revalidate book page for client view\n    return { success: true, message: `Estado de la cita actualizado a ${newStatus}.` };\n  } catch (error) {\n    console.error(`Server Action: Error updating appointment ${appointmentId} status in Firestore:`, error);\n    return { success: false, message: 'Error al actualizar el estado de la cita.' };\n  }\n}\n\n\nexport async function getBookedSlotsForDate(date: Date): Promise<string[]> {\n  try {\n    const targetDay = new Date(date);\n    targetDay.setHours(0,0,0,0); \n\n    const q = query(\n      appointmentsCollectionRef,\n      where('preferredDate', '==', Timestamp.fromDate(targetDay)),\n      where('status', 'in', ['pending', 'confirmed'])\n    );\n    const querySnapshot = await getDocs(q);\n    const bookedSlots = querySnapshot.docs.map(docSnap => docSnap.data().preferredTime as string);\n    return bookedSlots;\n  } catch (error) {\n    console.error(\"Error fetching booked slots:\", error);\n    return [];\n  }\n}\n\n\n// --- AI Style Advice Actions ---\nexport async function getAIStyleAdvice(data: StyleAdvisorFormValues) {\n  try {\n    const recommendation = await getStyleRecommendationWithServices({\n      hairType: data.hairType,\n      faceShape: data.faceShape,\n      preferences: data.stylePreferences,\n    });\n    return { success: true, data: recommendation };\n  } catch (error) {\n    console.error('Error getting AI style advice:', error);\n    return { success: false, message: 'Failed to get style advice. Please try again later.' };\n  }\n}\n\n// --- Site Settings Actions ---\nexport async function submitSiteSettings(data: SiteSettingsFormValues) {\n  console.log('Site Settings Update Received by Server Action:', data);\n  revalidatePath('/admin/settings'); \n  revalidatePath('/'); \n  return { success: true, message: 'Configuración del sitio procesada. Los cambios en nombre y descripción se reflejarán en breve (puede requerir refrescar la página o reconstrucción).' };\n}\n\n\n// --- Product Management Actions ---\nexport async function getProducts(): Promise<Product[]> {\n  try {\n    const querySnapshot = await getDocs(productsCollectionRef);\n    const products = querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      let imageSrcVal = 'https://placehold.co/400x400.png';\n      if (typeof data.imageSrc === 'string' && (data.imageSrc.startsWith('http://') || data.imageSrc.startsWith('https://'))) {\n        imageSrcVal = data.imageSrc;\n      } else if (data.imageSrc && data.imageSrc.trim() !== '') {\n        console.warn(`Product ID ${docSnap.id} has an imageSrc in Firestore that is not a valid http/https URL or is empty: \"${data.imageSrc}\". Defaulting to placeholder.`);\n      } else if (!data.imageSrc) {\n         console.warn(`Product ID ${docSnap.id} is missing imageSrc in Firestore. Defaulting to placeholder.`);\n      }\n      \n      return {\n        id: docSnap.id,\n        name: data.name || 'Unnamed Product',\n        description: data.description || '',\n        price: data.price || 'ARS$ 0',\n        imageSrc: imageSrcVal,\n        aiHint: data.aiHint || '',\n        stock: typeof data.stock === 'number' ? data.stock : 0,\n        createdAt: data.createdAt ? (data.createdAt as Timestamp).toDate().toISOString() : undefined,\n      } as Product;\n    });\n    return products;\n  } catch (error) {\n    console.error(\"Error fetching products from Firestore:\", error);\n    return [];\n  }\n}\n\nexport async function addProduct(data: ProductFormValues) {\n  try {\n    const productDataToAdd = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      imageSrc: data.imageSrc,\n      aiHint: data.aiHint,\n      stock: data.stock ?? 0,\n      createdAt: Timestamp.now()\n    };\n    const docRef = await addDoc(productsCollectionRef, productDataToAdd);\n    const newProduct: Product = {\n      id: docRef.id,\n      ...productDataToAdd,\n      createdAt: productDataToAdd.createdAt.toDate().toISOString(),\n    };\n    revalidatePath('/products');\n    revalidatePath('/admin/settings'); \n    revalidatePath('/admin');\n    return { success: true, message: 'Producto añadido con éxito a Firestore.', product: newProduct };\n  } catch (error) {\n    console.error(\"Error adding product to Firestore:\", error);\n    return { success: false, message: 'Error al añadir el producto a Firestore. Inténtalo de nuevo.' };\n  }\n}\n\nexport async function updateProduct(data: ProductFormValues) {\n  if (!data.id) {\n    return { success: false, message: 'Product ID is missing for update.' };\n  }\n  try {\n    const productDocRef = doc(firestore, 'products', data.id);\n    const productDataToUpdate = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      imageSrc: data.imageSrc,\n      aiHint: data.aiHint,\n      stock: data.stock ?? 0,\n    };\n    await updateDoc(productDocRef, productDataToUpdate);\n    const updatedDocSnap = await getDoc(productDocRef);\n    if (!updatedDocSnap.exists()) {\n        return { success: false, message: 'Failed to retrieve updated product.' };\n    }\n    const updatedData = updatedDocSnap.data();\n    let imageSrcVal = 'https://placehold.co/400x400.png';\n    if (typeof updatedData.imageSrc === 'string' && (updatedData.imageSrc.startsWith('http://') || updatedData.imageSrc.startsWith('https://'))) {\n        imageSrcVal = updatedData.imageSrc;\n    }\n    const updatedProduct: Product = {\n      id: updatedDocSnap.id,\n      name: updatedData.name,\n      description: updatedData.description,\n      price: updatedData.price,\n      imageSrc: imageSrcVal,\n      aiHint: updatedData.aiHint,\n      stock: updatedData.stock,\n      createdAt: updatedData.createdAt ? (updatedData.createdAt as Timestamp).toDate().toISOString() : undefined,\n    };\n    revalidatePath('/products');\n    revalidatePath('/admin/settings');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto actualizado con éxito.', product: updatedProduct };\n  } catch (error) {\n    console.error(\"Error updating product in Firestore:\", error);\n    return { success: false, message: 'Error al actualizar el producto. Inténtalo de nuevo.' };\n  }\n}\n\nexport async function deleteProduct(productId: string) {\n  try {\n    const productDocRef = doc(firestore, 'products', productId);\n    await deleteDoc(productDocRef);\n    revalidatePath('/products');\n    revalidatePath('/admin/settings');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto eliminado con éxito de Firestore.' };\n  } catch (error) {\n    console.error(\"Error deleting product from Firestore:\", error);\n    return { success: false, message: 'Error al eliminar el producto de Firestore. Inténtalo de nuevo.' };\n  }\n}\n\n\n// --- Service Management Actions ---\nexport async function getServices(): Promise<Service[]> {\n  try {\n    const q = query(servicesCollectionRef, orderBy('name', 'asc'));\n    const querySnapshot = await getDocs(q);\n    const services = querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      return {\n        id: docSnap.id,\n        name: data.name || 'Unnamed Service',\n        description: data.description || '',\n        price: data.price || 'ARS$ 0',\n        createdAt: data.createdAt ? (data.createdAt as Timestamp).toDate().toISOString() : undefined,\n      } as Service;\n    });\n    return services;\n  } catch (error) {\n    console.error(\"Error fetching services from Firestore:\", error);\n    return [];\n  }\n}\n\nexport async function addService(data: ServiceFormValues) {\n  try {\n    const serviceDataToAdd = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      createdAt: Timestamp.now()\n    };\n    const docRef = await addDoc(servicesCollectionRef, serviceDataToAdd);\n    const newService: Service = {\n      id: docRef.id,\n      ...serviceDataToAdd,\n      createdAt: serviceDataToAdd.createdAt.toDate().toISOString(),\n    };\n    revalidatePath('/admin/settings');\n    revalidatePath('/book');\n    return { success: true, message: 'Servicio añadido con éxito.', service: newService };\n  } catch (error) {\n    console.error(\"Error adding service to Firestore:\", error);\n    return { success: false, message: 'Error al añadir el servicio.' };\n  }\n}\n\nexport async function updateService(data: ServiceFormValues) {\n  if (!data.id) {\n    return { success: false, message: 'Service ID is missing for update.' };\n  }\n  try {\n    const serviceDocRef = doc(firestore, 'services', data.id);\n    const serviceDataToUpdate = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n    };\n    await updateDoc(serviceDocRef, serviceDataToUpdate);\n    \n    const updatedDocSnap = await getDoc(serviceDocRef);\n     if (!updatedDocSnap.exists()) {\n        return { success: false, message: 'Failed to retrieve updated service.' };\n    }\n    const updatedData = updatedDocSnap.data();\n    const updatedService: Service = {\n      id: updatedDocSnap.id,\n      name: updatedData.name,\n      description: updatedData.description,\n      price: updatedData.price,\n      createdAt: updatedData.createdAt ? (updatedData.createdAt as Timestamp).toDate().toISOString() : undefined,\n    };\n\n    revalidatePath('/admin/settings');\n    revalidatePath('/book');\n    return { success: true, message: 'Servicio actualizado con éxito.', service: updatedService };\n  } catch (error) {\n    console.error(\"Error updating service in Firestore:\", error);\n    return { success: false, message: 'Error al actualizar el servicio.' };\n  }\n}\n\nexport async function deleteService(serviceId: string) {\n  try {\n    const serviceDocRef = doc(firestore, 'services', serviceId);\n    await deleteDoc(serviceDocRef);\n    revalidatePath('/admin/settings');\n    revalidatePath('/book');\n    return { success: true, message: 'Servicio eliminado con éxito.' };\n  } catch (error) {\n    console.error(\"Error deleting service from Firestore:\", error);\n    return { success: false, message: 'Error al eliminar el servicio.' };\n  }\n}\n\n// --- Time Slot Settings Actions ---\nexport async function getTimeSlotSettings(): Promise<TimeSlotSetting[]> {\n  try {\n    const snapshot = await getDocs(timeSlotSettingsCollectionRef);\n    const savedSettingsMap = new Map<string, boolean>();\n    snapshot.forEach(docSnap => { \n      savedSettingsMap.set(docSnap.id, docSnap.data().isActive as boolean);\n    });\n\n    const settings = ALL_TIME_SLOTS.map(time => ({\n      time,\n      isActive: savedSettingsMap.get(time) ?? true, \n    }));\n    return settings;\n  } catch (error) {\n    console.error(\"Error fetching time slot settings:\", error);\n    return ALL_TIME_SLOTS.map(time => ({ time, isActive: true }));\n  }\n}\n\nexport async function updateTimeSlotSetting(time: string, isActive: boolean) {\n  try {\n    const settingDocRef = doc(timeSlotSettingsCollectionRef, time); \n    await setDoc(settingDocRef, { time, isActive }); \n    revalidatePath('/admin/settings');\n    revalidatePath('/book');\n    return { success: true, message: `Time slot ${time} ${isActive ? 'activated' : 'deactivated'}.` };\n  } catch (error) {\n    console.error(\"Error updating time slot setting:\", error);\n    return { success: false, message: 'Failed to update time slot setting.' };\n  }\n}\n\n// --- WhatsApp Message Template Actions ---\nconst DEFAULT_CONFIRMATION_TEMPLATE = `Hola {{clientName}}, tu cita en ${siteConfig.name} para el {{appointmentDate}} a las {{appointmentTime}} ha sido CONFIRMADA. Servicios: {{servicesList}}. ¡Te esperamos!`;\nconst DEFAULT_CANCELLATION_TEMPLATE = `Hola {{clientName}}, lamentamos informarte que tu cita en ${siteConfig.name} para el {{appointmentDate}} a las {{appointmentTime}} (Servicios: {{servicesList}}) ha sido CANCELADA. Por favor, contáctanos si deseas reprogramar.`;\n\nexport async function getMessageTemplate(templateId: 'confirmation' | 'cancellation'): Promise<string> {\n  try {\n    const templateDocRef = doc(messageTemplatesCollectionRef, templateId);\n    const docSnap = await getDoc(templateDocRef);\n    if (docSnap.exists()) {\n      return docSnap.data().content as string;\n    }\n    return templateId === 'confirmation' ? DEFAULT_CONFIRMATION_TEMPLATE : DEFAULT_CANCELLATION_TEMPLATE;\n  } catch (error) {\n    console.error(`Error fetching message template ${templateId}:`, error);\n    return templateId === 'confirmation' ? DEFAULT_CONFIRMATION_TEMPLATE : DEFAULT_CANCELLATION_TEMPLATE;\n  }\n}\n\nexport async function updateMessageTemplate(templateId: 'confirmation' | 'cancellation', content: string) {\n  try {\n    const templateDocRef = doc(messageTemplatesCollectionRef, templateId);\n    await setDoc(templateDocRef, { content });\n    revalidatePath('/admin/settings');\n    return { success: true, message: `Plantilla de mensaje de ${templateId} actualizada.` };\n  } catch (error) {\n    console.error(`Error updating message template ${templateId}:`, error);\n    return { success: false, message: `Error al actualizar la plantilla de ${templateId}.` };\n  }\n}\n    \n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAqEsB;IAkDA;IA6CA;IA8FA;IAgEA;IAyCA;IAqBA;IAeA;IASA;IAgCA;IA2BA;IA4CA;IAgBA;IAqBA;IAuBA;IAmCA;IAcA;IAmBA;IAiBA;IAcA","debugId":null}},
    {"offset": {"line": 951, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schemas.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Client-side Appointment Form Schema (used by react-hook-form)\nexport const clientAppointmentSchema = z.object({\n  preferredDate: z.date({ required_error: \"Por favor, selecciona una fecha.\"}),\n  preferredTime: z.string().min(1, { message: \"Por favor, selecciona un horario.\"}),\n  services: z.array(z.string()).min(1, { message: \"Por favor, selecciona al menos un servicio.\"}),\n  message: z.string().optional(),\n});\nexport type ClientAppointmentFormValues = z.infer<typeof clientAppointmentSchema>;\n\n// Server-side/Full Appointment Schema (used by server action)\n// This now explicitly includes userId, which is added by the client before sending to the server.\nexport const appointmentSchema = clientAppointmentSchema.extend({\n  userId: z.string().min(1, { message: \"User ID is required.\" }),\n});\nexport type AppointmentFormValues = z.infer<typeof appointmentSchema>;\n\n\n// Style Advisor Form Schema\nexport const styleAdvisorSchema = z.object({\n  hairType: z.string().min(1, { message: \"Please select your hair type.\" }),\n  faceShape: z.string().min(1, { message: \"Please select your face shape.\" }),\n  stylePreferences: z.string().min(3, { message: \"Describe your style preferences (min 3 chars).\" }),\n});\nexport type StyleAdvisorFormValues = z.infer<typeof styleAdvisorSchema>;\n\n// Login Form Schema\nexport const loginSchema = z.object({\n  email: z.string().email({ message: \"Correo electrónico inválido.\" }),\n  password: z.string().min(6, { message: \"La contraseña debe tener al menos 6 caracteres.\" }),\n});\nexport type LoginFormData = z.infer<typeof loginSchema>;\n\n// Register Form Schema\nexport const registerSchema = z.object({\n  fullName: z.string().min(2, { message: \"El nombre completo debe tener al menos 2 caracteres.\" }),\n  email: z.string().email({ message: \"Correo electrónico inválido.\" }),\n  phoneNumber: z.string().min(8, { message: \"El número de teléfono debe tener al menos 8 dígitos.\" }),\n  password: z.string().min(6, { message: \"La contraseña debe tener al menos 6 caracteres.\" }),\n  confirmPassword: z.string().min(6, { message: \"La contraseña debe tener al menos 6 caracteres.\" }),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Las contraseñas no coinciden.\",\n  path: [\"confirmPassword\"], // path of error\n});\nexport type RegisterFormData = z.infer<typeof registerSchema>;\n\n// Site Settings Form Schema\nexport const siteSettingsSchema = z.object({\n  siteName: z.string().min(1, { message: \"El nombre del sitio no puede estar vacío.\" }),\n  siteDescription: z.string().min(1, { message: \"La descripción del sitio no puede estar vacía.\" }),\n});\nexport type SiteSettingsFormValues = z.infer<typeof siteSettingsSchema>;\n\n// Product Form Schema\nexport const productSchema = z.object({\n  id: z.string().optional(), // Optional for new products, required for existing\n  name: z.string().min(3, { message: \"El nombre del producto debe tener al menos 3 caracteres.\" }),\n  description: z.string().min(10, { message: \"La descripción debe tener al menos 10 caracteres.\" }),\n  price: z.string().regex(/^ARS\\$\\s?\\d+(\\.\\d{1,2})?$/, { message: \"El precio debe estar en formato ARS$ XXXX o ARS$ XXXX.XX\" }),\n  imageSrc: z.string()\n    .min(1, { message: \"La URL de la imagen no puede estar vacía.\" })\n    .url({ message: \"Por favor, introduce una URL de imagen válida.\" })\n    .refine(val => val.startsWith('http://') || val.startsWith('https://'), {\n      message: \"La URL debe empezar con http:// o https://\",\n    }),\n  aiHint: z.string().min(2, { message: \"La pista de IA debe tener al menos 2 caracteres.\" }),\n  stock: z.coerce.number().min(0, { message: \"El stock no puede ser negativo.\" }).optional().default(0),\n});\nexport type ProductFormValues = z.infer<typeof productSchema>;\n\n// Service Form Schema\nexport const serviceSchema = z.object({\n  id: z.string().optional(),\n  name: z.string().min(3, { message: \"El nombre del servicio debe tener al menos 3 caracteres.\" }),\n  description: z.string().min(5, { message: \"La descripción debe tener al menos 5 caracteres.\" }),\n  price: z.string().regex(/^ARS\\$\\s?\\d+(\\.\\d{1,2})?$/, { message: \"El precio debe estar en formato ARS$ XXXX o ARS$ XXXX.XX\" }),\n  // duration: z.string().min(1, { message: \"La duración es requerida (ej: 30 min, 1 hora).\" }), // Example: if you want duration\n});\nexport type ServiceFormValues = z.infer<typeof serviceSchema>;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1075, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/constants.ts"],"sourcesContent":["// src/lib/constants.ts\nexport const ALL_TIME_SLOTS = [\n  \"09:00 AM\", \"09:30 AM\", \"10:00 AM\", \"10:30 AM\", \"11:00 AM\", \"11:30 AM\",\n  \"12:00 PM\", \"12:30 PM\", \"01:00 PM\", \"01:30 PM\", \"02:00 PM\", \"02:30 PM\",\n  \"03:00 PM\", \"03:30 PM\", \"04:00 PM\", \"04:30 PM\", \"05:00 PM\", \"05:30 PM\",\n  \"06:00 PM\", \"06:30 PM\", \"07:00 PM\"\n];\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;AAChB,MAAM,iBAAiB;IAC5B;IAAY;IAAY;IAAY;IAAY;IAAY;IAC5D;IAAY;IAAY;IAAY;IAAY;IAAY;IAC5D;IAAY;IAAY;IAAY;IAAY;IAAY;IAC5D;IAAY;IAAY;CACzB","debugId":null}},
    {"offset": {"line": 1111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/book/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Calendar } from \"@/components/ui/calendar\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Badge } from '@/components/ui/badge';\nimport { cn } from \"@/lib/utils\"\nimport { CalendarIcon, Loader2, Clock, ListChecks, UserCircle, Briefcase, Edit, Trash2, AlertCircle } from \"lucide-react\"\nimport { format } from \"date-fns\"\nimport { es } from 'date-fns/locale'; \nimport Link from 'next/link';\n\nimport { PageHeader } from '@/components/page-header';\nimport { \n  submitAppointmentRequest, \n  getBookedSlotsForDate, \n  getServices, \n  type Service, \n  getTimeSlotSettings, \n  type TimeSlotSetting,\n  getUserAppointments,\n  updateAppointmentStatus,\n  type Appointment,\n} from '@/app/actions';\nimport { type ClientAppointmentFormValues, clientAppointmentSchema, type AppointmentFormValues } from '@/lib/schemas';\nimport { useToast } from '@/hooks/use-toast';\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useAuth } from '@/context/AuthContext';\nimport { ALL_TIME_SLOTS } from '@/lib/constants';\n\n\nconst MIN_ADVANCE_BOOKING_MINUTES = 15;\nconst now = new Date(); \n\nexport default function BookAppointmentPage() {\n  const { toast } = useToast();\n  const { currentUser } = useAuth(); \n  const [isLoading, setIsLoading] = React.useState(false);\n  const [selectedTimeSlot, setSelectedTimeSlot] = React.useState<string | undefined>(undefined);\n  const [bookedSlots, setBookedSlots] = React.useState<string[]>([]);\n  const [isLoadingBookedSlots, setIsLoadingBookedSlots] = React.useState(false);\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n\n  const [allServices, setAllServices] = useState<Service[]>([]);\n  const [isLoadingServices, setIsLoadingServices] = useState(true);\n\n  const [activeTimeSlotSettings, setActiveTimeSlotSettings] = useState<TimeSlotSetting[]>([]);\n  const [isLoadingSlotSettings, setIsLoadingSlotSettings] = useState(true);\n\n  // For \"My Appointments\" tab\n  const [myAppointments, setMyAppointments] = useState<Appointment[]>([]);\n  const [isLoadingMyAppointments, setIsLoadingMyAppointments] = useState(true);\n  const [appointmentToCancel, setAppointmentToCancel] = useState<Appointment | null>(null);\n  const [isCancelDialogOpen, setIsCancelDialogOpen] = useState(false);\n  const [isCancellingAppointment, setIsCancellingAppointment] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"request\");\n\n\n  const form = useForm<ClientAppointmentFormValues>({\n    resolver: zodResolver(clientAppointmentSchema),\n    defaultValues: {\n      services: [],\n      preferredDate: undefined,\n      preferredTime: '',\n      message: '',\n    },\n  });\n\n  const serviceMap = useMemo(() => {\n    return new Map(allServices.map(service => [service.id, service.name]));\n  }, [allServices]);\n\n  const fetchPageData = async () => {\n    setIsLoadingServices(true);\n    setIsLoadingSlotSettings(true);\n    try {\n      const [fetchedServices, fetchedSlotSettings] = await Promise.all([\n        getServices(),\n        getTimeSlotSettings()\n      ]);\n      setAllServices(fetchedServices);\n      setActiveTimeSlotSettings(fetchedSlotSettings);\n    } catch (error) {\n      console.error(\"Error fetching page data:\", error);\n      toast({ title: 'Error', description: 'No se pudieron cargar los datos necesarios para la reserva.', variant: 'destructive' });\n    } finally {\n      setIsLoadingServices(false);\n      setIsLoadingSlotSettings(false);\n    }\n  };\n\n  const fetchUserAppointments = async () => {\n    if (currentUser) {\n      setIsLoadingMyAppointments(true);\n      try {\n        const userAppointments = await getUserAppointments(currentUser.uid);\n        setMyAppointments(userAppointments);\n      } catch (error) {\n        console.error(\"Error fetching user appointments:\", error);\n        toast({ title: 'Error', description: 'No se pudieron cargar tus citas.', variant: 'destructive' });\n      } finally {\n        setIsLoadingMyAppointments(false);\n      }\n    } else {\n      setMyAppointments([]);\n      setIsLoadingMyAppointments(false);\n    }\n  };\n  \n  useEffect(() => {\n    fetchPageData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); \n\n  useEffect(() => {\n    if (activeTab === 'my-appointments') {\n      fetchUserAppointments();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentUser, activeTab]);\n\n\n  const watchedDate = form.watch('preferredDate');\n  const formattedSelectedDate = watchedDate \n    ? format(watchedDate, \"'Para el' EEEE, d 'de' MMMM 'de' yyyy\", { locale: es }) \n    : \"Selecciona una fecha primero\";\n\n  useEffect(() => {\n    let isActive = true;\n\n    const fetchBookedSlots = async () => {\n      if (!watchedDate) {\n        if (isActive) {\n          setBookedSlots([]);\n          setSelectedTimeSlot(undefined);\n          form.setValue('preferredTime', '');\n          setIsLoadingBookedSlots(false); \n        }\n        return;\n      }\n\n      if (isActive) {\n        setSelectedTimeSlot(undefined); \n        form.setValue('preferredTime', ''); \n        setIsLoadingBookedSlots(true); \n      }\n\n      try {\n        const slots = await getBookedSlotsForDate(watchedDate);\n        if (isActive) {\n          setBookedSlots(slots); \n        }\n      } catch (error) {\n        if (isActive) {\n          console.error(\"Error fetching booked slots:\", error);\n          toast({ title: 'Error', description: 'No se pudieron cargar los horarios ocupados.', variant: 'destructive' });\n          setBookedSlots([]); \n        }\n      } finally {\n        if (isActive) {\n          setIsLoadingBookedSlots(false);\n        }\n      }\n    };\n\n    fetchBookedSlots();\n\n    return () => {\n      isActive = false; \n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [watchedDate]);\n\n\n  async function onSubmit(data: ClientAppointmentFormValues) {\n    console.log(\"Submitting appointment with payload:\", data);\n    if (!currentUser) {\n      toast({\n        title: 'Error de Autenticación',\n        description: 'Debes iniciar sesión para solicitar una cita.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    let result;\n    \n    try {\n      const payloadForServer: AppointmentFormValues = {\n        ...data,\n        userId: currentUser.uid,\n      };\n      result = await submitAppointmentRequest(payloadForServer);\n    } catch (error) {\n      console.error(\"Unexpected error submitting appointment:\", error);\n      toast({\n        title: 'Error Inesperado',\n        description: 'Ocurrió un error al procesar tu solicitud. Inténtalo de nuevo.',\n        variant: 'destructive',\n      });\n      setIsLoading(false);\n      return;\n    }\n    \n    setIsLoading(false);\n\n    if (result.success) {\n      toast({\n        title: '¡Éxito!',\n        description: result.message,\n      });\n      form.reset({ \n        services: [], \n        preferredDate: watchedDate,\n        preferredTime: '', \n        message: '' \n      });\n      setSelectedTimeSlot(undefined);\n      if (watchedDate) { \n        setIsLoadingBookedSlots(true);\n        getBookedSlotsForDate(watchedDate)\n          .then(newSlots => {\n            setBookedSlots(newSlots);\n            fetchUserAppointments(); // Refresh user appointments\n          })\n          .catch(fetchError => {\n            console.error(\"Error re-fetching booked slots after submission:\", fetchError);\n          })\n          .finally(() => {\n            setIsLoadingBookedSlots(false);\n          });\n      }\n    } else {\n      toast({\n        title: 'Error',\n        description: result.message,\n        variant: 'destructive',\n      });\n       if (result.message && result.message.includes('Este horario ya no está disponible')) {\n          if (watchedDate) {\n            setIsLoadingBookedSlots(true);\n            getBookedSlotsForDate(watchedDate)\n              .then(newSlots => {\n                setBookedSlots(newSlots);\n              })\n              .catch(fetchError => {\n                console.error(\"Error re-fetching booked slots after failed booking:\", fetchError);\n              })\n              .finally(() => {\n                setIsLoadingBookedSlots(false);\n              });\n          }\n       }\n    }\n  }\n  \n  const handleCancelAppointment = async () => {\n    if (!appointmentToCancel || !currentUser) return;\n    setIsCancellingAppointment(true);\n    const result = await updateAppointmentStatus(appointmentToCancel.id, 'cancelled', currentUser.uid);\n    setIsCancellingAppointment(false);\n    setIsCancelDialogOpen(false);\n\n    if (result.success) {\n      toast({ title: 'Cita Cancelada', description: result.message });\n      fetchUserAppointments(); // Refresh the list\n    } else {\n      toast({ title: 'Error al Cancelar', description: result.message, variant: 'destructive' });\n    }\n    setAppointmentToCancel(null);\n  };\n\n  const getStatusVariant = (status: string): \"default\" | \"secondary\" | \"destructive\" | \"outline\" => {\n    switch (status?.toLowerCase()) {\n      case 'pending': return 'default';\n      case 'confirmed': return 'secondary';\n      case 'completed': return 'secondary';\n      case 'cancelled': return 'destructive';\n      default: return 'outline';\n    }\n  };\n\n  const currentlyActiveSlots = ALL_TIME_SLOTS.filter(slot => {\n    const slotSetting = activeTimeSlotSettings.find(s => s.time === slot);\n    return slotSetting ? slotSetting.isActive : true; // Default to active if not found\n  });\n  \n  return (\n    <div className=\"container mx-auto px-4 py-12\">\n      <PageHeader\n        title=\"Reservar Tu Cita\"\n        description=\"Gestiona tus citas o solicita una nueva. ¡Te esperamos!\"\n      />\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"max-w-2xl mx-auto\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"request\">Solicitar Cita</TabsTrigger>\n          <TabsTrigger value=\"my-appointments\">Mis Citas</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"request\" className=\"mt-6\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n              <FormField\n                control={form.control}\n                name=\"preferredDate\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-col\">\n                    <FormLabel className=\"text-lg font-semibold\">Fecha Preferida</FormLabel>\n                    <Popover open={isCalendarOpen} onOpenChange={setIsCalendarOpen}>\n                      <PopoverTrigger asChild>\n                        <FormControl>\n                          <Button\n                            variant={\"outline\"}\n                            className={cn(\n                              \"w-full pl-3 text-left font-normal text-base py-6\",\n                              !field.value && \"text-muted-foreground\"\n                            )}\n                          >\n                            {field.value ? (\n                              format(field.value, \"PPP\", { locale: es })\n                            ) : (\n                              <span>Selecciona una fecha</span>\n                            )}\n                            <CalendarIcon className=\"ml-auto h-5 w-5 opacity-50\" />\n                          </Button>\n                        </FormControl>\n                      </PopoverTrigger>\n                      <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                        <Calendar\n                          mode=\"single\"\n                          selected={field.value}\n                          onSelect={(date) => {\n                            field.onChange(date);\n                            setIsCalendarOpen(false); \n                          }}\n                          disabled={(date) =>\n                            date < new Date(new Date().setDate(new Date().getDate() -1)) || date < new Date(\"1900-01-01\")\n                          }\n                          initialFocus\n                          locale={es} \n                        />\n                      </PopoverContent>\n                    </Popover>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n              <FormField\n                control={form.control}\n                name=\"preferredTime\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-lg font-semibold flex items-center\">\n                      <Clock className=\"mr-2 h-5 w-5 text-primary\" />\n                      Horarios Disponibles\n                    </FormLabel>\n                    <p className=\"text-sm text-muted-foreground mb-3\">{formattedSelectedDate}</p>\n                    \n                    <div className=\"min-h-[70px] py-2\">\n                      {!watchedDate ? (\n                        <p key=\"no-date\" className=\"text-sm text-muted-foreground text-center\">Por favor, selecciona una fecha para ver los horarios.</p>\n                      ) : isLoadingBookedSlots || isLoadingSlotSettings ? (\n                        <div key=\"loading-slots\" className=\"flex justify-center items-center h-full\">\n                          <Loader2 className=\"h-6 w-6 animate-spin text-primary\" />\n                          <span className=\"ml-2\">Cargando horarios...</span>\n                        </div>\n                      ) : (\n                        <div key=\"slots-grid\" className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 gap-3\">\n                          {currentlyActiveSlots.map((slot) => {\n                              const isToday = watchedDate ? format(watchedDate, 'yyyy-MM-dd') === format(now, 'yyyy-MM-dd') : false;\n                              let slotIsTooSoonOrPast = false;\n\n                              if (watchedDate && isToday) {\n                                  const timeParts = slot.split(' ');\n                                  const timeDigits = timeParts[0].split(':');\n                                  let slotHours = parseInt(timeDigits[0]);\n                                  const slotMinutes = parseInt(timeDigits[1]);\n                                  const period = timeParts[1].toUpperCase();\n\n                                  if (period === 'PM' && slotHours !== 12) slotHours += 12;\n                                  else if (period === 'AM' && slotHours === 12) slotHours = 0; \n\n                                  const slotStartDateTime = new Date(watchedDate); \n                                  slotStartDateTime.setHours(slotHours, slotMinutes, 0, 0);\n                                  \n                                  const cutoffTime = new Date(new Date().getTime() + MIN_ADVANCE_BOOKING_MINUTES * 60 * 1000);\n\n                                  if (slotStartDateTime <= cutoffTime) {\n                                      slotIsTooSoonOrPast = true;\n                                  }\n                              }\n                              \n                              const isSlotBooked = bookedSlots.includes(slot);\n                              const isDisabled = isSlotBooked || slotIsTooSoonOrPast;\n\n                              return (\n                                 <Button\n                                    key={slot}\n                                    type=\"button\"\n                                    variant={selectedTimeSlot === slot && !isDisabled ? \"default\" : \"outline\"}\n                                    className={cn(\n                                      \"w-full py-3 text-sm\",\n                                      selectedTimeSlot === slot && !isDisabled\n                                        ? \"bg-primary text-primary-foreground hover:bg-primary/90\" \n                                        : isDisabled \n                                          ? \"text-muted-foreground bg-muted hover:bg-muted cursor-not-allowed\"\n                                          : \"text-foreground hover:bg-muted\"\n                                    )}\n                                    onClick={() => {\n                                      if (!isDisabled) {\n                                        setSelectedTimeSlot(slot);\n                                        field.onChange(slot);\n                                      }\n                                    }}\n                                    disabled={isDisabled}\n                                  >\n                                    {slot}\n                                  </Button>\n                              );\n                          })}\n                          {currentlyActiveSlots.filter(slot => {\n                              const isToday = watchedDate ? format(watchedDate, 'yyyy-MM-dd') === format(now, 'yyyy-MM-dd') : false;\n                              let slotIsTooSoonOrPast = false;\n                              if (watchedDate && isToday) {\n                                  const timeParts = slot.split(' ');\n                                  const timeDigits = timeParts[0].split(':');\n                                  let slotHours = parseInt(timeDigits[0]);\n                                  const slotMinutes = parseInt(timeDigits[1]);\n                                  const period = timeParts[1].toUpperCase();\n                                  if (period === 'PM' && slotHours !== 12) slotHours += 12;\n                                  else if (period === 'AM' && slotHours === 12) slotHours = 0;\n                                  const slotStartDateTime = new Date(watchedDate);\n                                  slotStartDateTime.setHours(slotHours, slotMinutes, 0, 0);\n                                  const cutoffTime = new Date(new Date().getTime() + MIN_ADVANCE_BOOKING_MINUTES * 60 * 1000);\n                                  if (slotStartDateTime <= cutoffTime) slotIsTooSoonOrPast = true;\n                              }\n                              return !bookedSlots.includes(slot) && !slotIsTooSoonOrPast;\n                          }).length === 0 && watchedDate && !isLoadingBookedSlots && !isLoadingSlotSettings && (\n                             <p className=\"text-sm text-muted-foreground text-center col-span-full\">\n                               No hay horarios disponibles para esta fecha.\n                             </p>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                    <FormMessage className=\"mt-2\" />\n                  </FormItem>\n                )}\n              />\n              \n              <FormField\n                control={form.control}\n                name=\"services\"\n                render={() => (\n                  <FormItem>\n                    <div className=\"mb-4\">\n                      <FormLabel className=\"text-lg font-semibold flex items-center\">\n                        <ListChecks className=\"mr-2 h-5 w-5 text-primary\" />\n                        Servicios\n                      </FormLabel>\n                      <FormDescription className=\"text-sm\">\n                        Selecciona el/los servicio(s) que te interesan.\n                      </FormDescription>\n                    </div>\n                    {isLoadingServices ? (\n                      <div className=\"flex justify-center items-center py-4\">\n                        <Loader2 className=\"h-6 w-6 animate-spin text-primary\" />\n                        <span className=\"ml-2\">Cargando servicios...</span>\n                      </div>\n                    ) : allServices.length === 0 ? (\n                       <p className=\"text-sm text-muted-foreground text-center py-4\">\n                          No hay servicios disponibles en este momento.\n                       </p>\n                    ) : (\n                      <div className=\"space-y-2\">\n                        {allServices.map((service) => (\n                          <FormField\n                            key={service.id}\n                            control={form.control}\n                            name=\"services\"\n                            render={({ field }) => {\n                              return (\n                                <FormItem\n                                  className=\"flex flex-row items-center space-x-3 space-y-0 p-3 rounded-md hover:bg-muted transition-colors border\"\n                                >\n                                  <FormControl>\n                                    <Checkbox\n                                      checked={field.value?.includes(service.id)}\n                                      onCheckedChange={(checked) => {\n                                        return checked\n                                          ? field.onChange([...(field.value || []), service.id])\n                                          : field.onChange(\n                                              (field.value || []).filter(\n                                                (value) => value !== service.id\n                                              )\n                                            )\n                                      }}\n                                      className=\"h-5 w-5\"\n                                    />\n                                  </FormControl>\n                                  <div className=\"flex-grow\">\n                                    <FormLabel className=\"font-normal text-base cursor-pointer flex justify-between items-center w-full\">\n                                      <span>{service.name}</span>\n                                      <span className=\"text-sm text-primary font-medium\">{service.price}</span>\n                                    </FormLabel>\n                                    <p className=\"text-xs text-muted-foreground mt-0.5\">{service.description}</p>\n                                  </div>\n                                </FormItem>\n                              )\n                            }}\n                          />\n                        ))}\n                      </div>\n                    )}\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"message\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-lg font-semibold\">Mensaje Adicional (Opcional)</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"¿Alguna petición específica o nota?\"\n                        className=\"resize-none text-base p-3\"\n                        rows={4}\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n               <Button \n                  type=\"submit\" \n                  className=\"w-full py-6 text-lg\" \n                  disabled={isLoading || !currentUser || isLoadingBookedSlots || isLoadingServices || isLoadingSlotSettings}\n                >\n                <Loader2 \n                  className={cn(\n                    \"mr-2 h-5 w-5 animate-spin\",\n                    (isLoading || isLoadingBookedSlots || isLoadingServices || isLoadingSlotSettings) ? \"inline-block\" : \"hidden\"\n                  )} \n                />\n                {isLoading || isLoadingBookedSlots || isLoadingServices || isLoadingSlotSettings ? (\n                  'Procesando...'\n                ) : (\n                  currentUser ? 'Solicitar Cita' : 'Inicia sesión para reservar'\n                )}\n              </Button>\n              {!currentUser && (\n                   <p className=\"text-sm text-center text-muted-foreground\">\n                      Debes <Link href=\"/login\" className=\"underline text-primary hover:text-primary/80\">iniciar sesión</Link> o <Link href=\"/register\" className=\"underline text-primary hover:text-primary/80\">registrarte</Link> para solicitar una cita.\n                   </p>\n              )}\n            </form>\n          </Form>\n        </TabsContent>\n\n        <TabsContent value=\"my-appointments\" className=\"mt-6\">\n          {!currentUser ? (\n            <Card className=\"text-center py-10\">\n              <CardHeader>\n                <UserCircle className=\"h-12 w-12 mx-auto text-muted-foreground mb-2\" />\n                <CardTitle>Mis Citas</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground mb-4\">\n                  <Link href=\"/login?redirect=/book\" className=\"text-primary underline\">Inicia sesión</Link> o <Link href=\"/register?redirect=/book\" className=\"text-primary underline\">regístrate</Link> para ver y gestionar tus citas.\n                </p>\n              </CardContent>\n            </Card>\n          ) : isLoadingMyAppointments || isLoadingServices ? (\n            <div className=\"flex justify-center items-center py-10\">\n              <Loader2 className=\"h-10 w-10 animate-spin text-primary\" />\n              <p className=\"ml-3 text-muted-foreground\">Cargando tus citas...</p>\n            </div>\n          ) : myAppointments.length === 0 ? (\n            <Card className=\"text-center py-10\">\n               <CardHeader>\n                <Briefcase className=\"h-12 w-12 mx-auto text-muted-foreground mb-2\" />\n                <CardTitle>No Tienes Citas</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground\">Aún no has solicitado ninguna cita.</p>\n                <Button className=\"mt-4\" onClick={() => setActiveTab(\"request\")}>Solicitar una Cita</Button>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className=\"space-y-4\">\n              {myAppointments.map((appt) => (\n                <Card key={appt.id} className=\"shadow-md\">\n                  <CardHeader className=\"pb-3\">\n                    <div className=\"flex justify-between items-start\">\n                      <div>\n                        <CardTitle className=\"text-lg font-sans\">\n                          {format(new Date(appt.preferredDate), \"PPP\", { locale: es })} - {appt.preferredTime}\n                        </CardTitle>\n                        <CardDescription className=\"text-xs pt-1\">\n                          Solicitada: {format(new Date(appt.createdAt), \"Pp\", { locale: es })}\n                        </CardDescription>\n                      </div>\n                      <Badge variant={getStatusVariant(appt.status)} className=\"capitalize text-xs px-2 py-0.5\">{appt.status}</Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"pb-4 space-y-2 text-sm\">\n                    <div>\n                      <span className=\"font-semibold\">Servicios: </span>\n                      {appt.services.map(serviceId => serviceMap.get(serviceId) || serviceId).join(', ')}\n                    </div>\n                    {appt.message && (\n                      <div>\n                        <span className=\"font-semibold\">Tu Mensaje: </span>\n                        {appt.message}\n                      </div>\n                    )}\n                  </CardContent>\n                  {appt.status === 'pending' && (\n                    <CardFooter className=\"pt-3 border-t flex justify-end\">\n                      <Button \n                        variant=\"destructive\" \n                        size=\"sm\" \n                        onClick={() => { setAppointmentToCancel(appt); setIsCancelDialogOpen(true); }}\n                        disabled={isCancellingAppointment && appointmentToCancel?.id === appt.id}\n                      >\n                        {isCancellingAppointment && appointmentToCancel?.id === appt.id ? (\n                          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                        ) : (\n                          <Trash2 className=\"mr-2 h-4 w-4\" />\n                        )}\n                        Cancelar Cita\n                      </Button>\n                    </CardFooter>\n                  )}\n                </Card>\n              ))}\n            </div>\n          )}\n        </TabsContent>\n      </Tabs>\n\n      {appointmentToCancel && (\n        <AlertDialog open={isCancelDialogOpen} onOpenChange={setIsCancelDialogOpen}>\n          <AlertDialogContent>\n            <AlertDialogHeader>\n              <AlertDialogTitle className=\"flex items-center\"><AlertCircle className=\"h-5 w-5 mr-2 text-destructive\"/>¿Confirmar Cancelación?</AlertDialogTitle>\n              <AlertDialogDescription>\n                ¿Estás seguro de que quieres cancelar tu cita para el \n                <strong className=\"text-foreground\"> {format(new Date(appointmentToCancel.preferredDate), \"PPP\", { locale: es })} a las {appointmentToCancel.preferredTime}</strong>?\n                <br/>\n                Servicios: {appointmentToCancel.services.map(serviceId => serviceMap.get(serviceId) || serviceId).join(', ')}.\n                <br/>\n                Esta acción no se puede deshacer.\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n            <AlertDialogFooter>\n              <AlertDialogCancel onClick={() => setAppointmentToCancel(null)}>Cerrar</AlertDialogCancel>\n              <AlertDialogAction \n                onClick={handleCancelAppointment} \n                disabled={isCancellingAppointment}\n                className={cn(isCancellingAppointment ? \"\" : \"bg-destructive hover:bg-destructive/90 text-destructive-foreground\")}\n              >\n                {isCancellingAppointment ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n                Sí, Cancelar Cita\n              </AlertDialogAction>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialog>\n      )}\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}