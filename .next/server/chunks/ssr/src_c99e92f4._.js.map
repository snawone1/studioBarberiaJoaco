{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base text-foreground ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kZACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/page-header.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\n\ninterface PageHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  title: string;\n  description?: string;\n  titleClassName?: string;\n  descriptionClassName?: string;\n}\n\nexport function PageHeader({\n  title,\n  description,\n  titleClassName,\n  descriptionClassName,\n  className,\n  ...props\n}: PageHeaderProps) {\n  return (\n    <div className={cn(\"py-12 text-center animate-fade-in\", className)} {...props}>\n      <h1\n        className={cn(\n          \"text-4xl font-bold tracking-tight sm:text-5xl lg:text-6xl font-headline text-foreground\",\n          titleClassName\n        )}\n      >\n        {title}\n      </h1>\n      {description && (\n        <p\n          className={cn(\n            \"mt-4 max-w-2xl mx-auto text-lg text-muted-foreground\",\n            descriptionClassName\n          )}\n        >\n          {description}\n        </p>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AASO,SAAS,WAAW,EACzB,KAAK,EACL,WAAW,EACX,cAAc,EACd,oBAAoB,EACpB,SAAS,EACT,GAAG,OACa;IAChB,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAAa,GAAG,KAAK;;0BAC3E,8OAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2FACA;0BAGD;;;;;;YAEF,6BACC,8OAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wDACA;0BAGD;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 503, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schemas.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Client-side Appointment Form Schema (used by react-hook-form)\nexport const clientAppointmentSchema = z.object({\n  preferredDate: z.date({ required_error: \"Por favor, selecciona una fecha.\"}),\n  preferredTime: z.string().min(1, { message: \"Por favor, selecciona un horario.\"}),\n  services: z.array(z.string()).min(1, { message: \"Por favor, selecciona al menos un servicio.\"}),\n  message: z.string().optional(),\n});\nexport type ClientAppointmentFormValues = z.infer<typeof clientAppointmentSchema>;\n\n// Server-side/Full Appointment Schema (used by server action)\n// This now explicitly includes userId, which is added by the client before sending to the server.\nexport const appointmentSchema = clientAppointmentSchema.extend({\n  userId: z.string().min(1, { message: \"User ID is required.\" }),\n});\nexport type AppointmentFormValues = z.infer<typeof appointmentSchema>;\n\n\n// Style Advisor Form Schema\nexport const styleAdvisorSchema = z.object({\n  hairType: z.string().min(1, { message: \"Please select your hair type.\" }),\n  faceShape: z.string().min(1, { message: \"Please select your face shape.\" }),\n  stylePreferences: z.string().min(3, { message: \"Describe your style preferences (min 3 chars).\" }),\n});\nexport type StyleAdvisorFormValues = z.infer<typeof styleAdvisorSchema>;\n\n// Login Form Schema\nexport const loginSchema = z.object({\n  email: z.string().email({ message: \"Correo electrónico inválido.\" }),\n  password: z.string().min(6, { message: \"La contraseña debe tener al menos 6 caracteres.\" }),\n});\nexport type LoginFormData = z.infer<typeof loginSchema>;\n\n// Register Form Schema\nexport const registerSchema = z.object({\n  fullName: z.string().min(2, { message: \"El nombre completo debe tener al menos 2 caracteres.\" }),\n  email: z.string().email({ message: \"Correo electrónico inválido.\" }),\n  phoneNumber: z.string().min(8, { message: \"El número de teléfono debe tener al menos 8 dígitos.\" }),\n  password: z.string().min(6, { message: \"La contraseña debe tener al menos 6 caracteres.\" }),\n  confirmPassword: z.string().min(6, { message: \"La contraseña debe tener al menos 6 caracteres.\" }),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Las contraseñas no coinciden.\",\n  path: [\"confirmPassword\"], // path of error\n});\nexport type RegisterFormData = z.infer<typeof registerSchema>;\n\n// Site Settings Form Schema\nexport const siteSettingsSchema = z.object({\n  siteName: z.string().min(1, { message: \"El nombre del sitio no puede estar vacío.\" }),\n  siteDescription: z.string().min(1, { message: \"La descripción del sitio no puede estar vacía.\" }),\n});\nexport type SiteSettingsFormValues = z.infer<typeof siteSettingsSchema>;\n\n// Product Form Schema\nexport const productSchema = z.object({\n  id: z.string().optional(), // Optional for new products, required for existing\n  name: z.string().min(3, { message: \"El nombre del producto debe tener al menos 3 caracteres.\" }),\n  description: z.string().min(10, { message: \"La descripción debe tener al menos 10 caracteres.\" }),\n  price: z.string().regex(/^ARS\\$\\s?\\d+(\\.\\d{1,2})?$/, { message: \"El precio debe estar en formato ARS$ XXXX o ARS$ XXXX.XX\" }),\n  imageSrc: z.string()\n    .min(1, { message: \"La URL de la imagen no puede estar vacía.\" })\n    .url({ message: \"Por favor, introduce una URL de imagen válida.\" })\n    .refine(val => val.startsWith('http://') || val.startsWith('https://'), {\n      message: \"La URL debe empezar con http:// o https://\",\n    }),\n  aiHint: z.string().min(2, { message: \"La pista de IA debe tener al menos 2 caracteres.\" }),\n  stock: z.coerce.number().min(0, { message: \"El stock no puede ser negativo.\" }).optional().default(0),\n});\nexport type ProductFormValues = z.infer<typeof productSchema>;\n\n// Service Form Schema\nexport const serviceSchema = z.object({\n  id: z.string().optional(),\n  name: z.string().min(3, { message: \"El nombre del servicio debe tener al menos 3 caracteres.\" }),\n  description: z.string().min(5, { message: \"La descripción debe tener al menos 5 caracteres.\" }),\n  price: z.string().regex(/^ARS\\$\\s?\\d+(\\.\\d{1,2})?$/, { message: \"El precio debe estar en formato ARS$ XXXX o ARS$ XXXX.XX\" }),\n});\nexport type ServiceFormValues = z.infer<typeof serviceSchema>;\n\n// Admin Edit User Form Schema\nexport const adminEditUserSchema = z.object({\n  fullName: z.string().min(2, { message: \"El nombre completo debe tener al menos 2 caracteres.\" }),\n  email: z.string().email({ message: \"Correo electrónico inválido.\" }), // Included for form structure, but will be read-only\n  phoneNumber: z.string().min(8, { message: \"El número de teléfono debe tener al menos 8 dígitos.\" }),\n});\nexport type AdminEditUserFormValues = z.infer<typeof adminEditUserSchema>;\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { AppointmentFormValues, SiteSettingsFormValues, StyleAdvisorFormValues, ProductFormValues, ServiceFormValues, AdminEditUserFormValues } from '@/lib/schemas';\nimport { getStyleRecommendationWithServices } from '@/ai/flows/style-recommendation-with-services';\nimport type { Product } from '@/app/products/page';\nimport { revalidatePath } from 'next/cache';\nimport { firestore } from '@/lib/firebase';\nimport { collection, getDocs, addDoc, deleteDoc, doc, Timestamp, updateDoc, getDoc, query, where, orderBy, setDoc } from 'firebase/firestore';\nimport { ALL_TIME_SLOTS } from '@/lib/constants';\nimport { siteConfig } from '@/config/site';\n\n// Firestore collection references\nconst appointmentsCollectionRef = collection(firestore, 'appointments');\nconst productsCollectionRef = collection(firestore, 'products');\nconst usersCollectionRef = collection(firestore, 'users');\nconst servicesCollectionRef = collection(firestore, 'services');\nconst timeSlotSettingsCollectionRef = collection(firestore, 'timeSlotSettings');\nconst messageTemplatesCollectionRef = collection(firestore, 'messageTemplates');\nconst appSettingsCollectionRef = collection(firestore, 'appSettings');\n\n\n// --- User Types ---\nexport type UserDetail = {\n  id: string;\n  fullName: string;\n  email: string;\n  phoneNumber: string;\n  createdAt: string;\n};\n\n\n// --- Appointment Types ---\nexport type Appointment = {\n  id: string;\n  userId: string;\n  userName?: string;\n  userEmail?: string;\n  userPhone?: string;\n  preferredDate: string;\n  preferredTime: string;\n  services: string[];\n  message?: string;\n  status: string;\n  createdAt: string;\n};\n\n// --- Service Type ---\nexport type Service = {\n  id: string;\n  name: string;\n  description: string;\n  price: string;\n  createdAt?: string;\n};\n\n// --- Time Slot Settings Types ---\nexport type TimeSlotSetting = {\n  time: string;\n  isActive: boolean;\n};\n\n// --- Message Template Type ---\nexport type MessageTemplate = {\n  id: string; // e.g., 'confirmation', 'cancellation'\n  content: string;\n};\n\n\n// --- User Management Actions ---\nexport async function getUsers(): Promise<UserDetail[]> {\n  // console.log(\"Admin: Attempting to fetch users from Firestore...\");\n  try {\n    const q = query(usersCollectionRef, orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    // console.log(`Admin: Found ${querySnapshot.docs.length} user documents.`);\n\n    if (querySnapshot.empty) {\n      // console.warn(\"Admin: No users found in the 'users' collection or access denied by Firestore security rules.\");\n      return [];\n    }\n\n    const users = querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      let createdAtISO: string;\n\n      if (data.createdAt && typeof data.createdAt === 'string') {\n        createdAtISO = data.createdAt;\n      } else if (data.createdAt && typeof data.createdAt.toDate === 'function') {\n        createdAtISO = data.createdAt.toDate().toISOString();\n      } else {\n        // console.warn(`Admin: User ${docSnap.id} has invalid or missing createdAt. Firestore data:`, data.createdAt);\n        createdAtISO = new Date(0).toISOString();\n      }\n\n      const userDetail: UserDetail = {\n        id: docSnap.id,\n        fullName: data.fullName || 'N/A',\n        email: data.email || 'N/A',\n        phoneNumber: data.phoneNumber || 'N/A',\n        createdAt: createdAtISO,\n      };\n      return userDetail;\n    });\n    // console.log(`Admin: Successfully mapped ${users.length} users.`);\n    return users;\n\n  } catch (error: any) {\n    console.error(\"Admin: Error fetching or mapping users from Firestore:\", error);\n    if (error.code === 'failed-precondition') {\n        console.error(\"IMPORTANT: Firestore 'failed-precondition' error for users query. This might mean a composite index is required if you add more complex ordering or filtering. Check Firestore console for index suggestions.\");\n    } else {\n        console.error(\"An unexpected error occurred while fetching users:\", error.message, error.stack);\n    }\n    return [];\n  }\n}\n\nexport async function updateUserDetail(\n  data: { userId: string; fullName: string; phoneNumber: string }\n): Promise<{ success: boolean; message: string }> {\n  console.log(`[updateUserDetail] Called for userId: ${data.userId} with data:`, data);\n  try {\n    const userDocRef = doc(firestore, 'users', data.userId);\n    await updateDoc(userDocRef, {\n      fullName: data.fullName,\n      phoneNumber: data.phoneNumber,\n      // Consider adding an 'updatedAt' timestamp if needed\n      // updatedAt: Timestamp.now(),\n    });\n    console.log(`[updateUserDetail] User ${data.userId} details updated successfully.`);\n    revalidatePath('/admin'); // For admin panel user list\n    return { success: true, message: 'Detalles del usuario actualizados con éxito.' };\n  } catch (error: any) {\n    console.error(`[updateUserDetail] Error updating user ${data.userId} details:`, error);\n    return { success: false, message: `Error al actualizar los detalles del usuario: ${error.message}` };\n  }\n}\n\n\n// --- Appointment Actions ---\nexport async function submitAppointmentRequest(data: AppointmentFormValues) {\n  console.log(\"[submitAppointmentRequest] Received data with userId:\", data.userId);\n  try {\n    const clientPreferredDate = data.preferredDate;\n\n    const normalizedPreferredDateObject = new Date(clientPreferredDate);\n    normalizedPreferredDateObject.setHours(0, 0, 0, 0);\n\n    const preferredDateTimestamp = Timestamp.fromDate(normalizedPreferredDateObject);\n    console.log(\"[submitAppointmentRequest] Normalized preferredDate to Timestamp:\", preferredDateTimestamp.toDate().toISOString());\n\n    const qCheck = query(\n      appointmentsCollectionRef,\n      where('preferredDate', '==', preferredDateTimestamp),\n      where('preferredTime', '==', data.preferredTime),\n      where('status', 'in', ['pending', 'confirmed'])\n    );\n\n    const existingAppointmentsSnap = await getDocs(qCheck);\n    if (!existingAppointmentsSnap.empty) {\n      console.log(\"[submitAppointmentRequest] Double booking detected for\", preferredDateTimestamp.toDate().toISOString(), data.preferredTime);\n      return { success: false, message: 'Este horario ya no está disponible. Por favor, elige otro.' };\n    }\n\n    const appointmentData = {\n      userId: data.userId, // Ensure this is the Firebase User UID\n      preferredDate: preferredDateTimestamp,\n      preferredTime: data.preferredTime,\n      services: data.services,\n      message: data.message || '',\n      status: 'pending',\n      createdAt: Timestamp.now(),\n    };\n    console.log(\"[submitAppointmentRequest] Attempting to add appointment to Firestore with data:\", JSON.stringify(appointmentData));\n    await addDoc(appointmentsCollectionRef, appointmentData);\n    console.log(\"[submitAppointmentRequest] Appointment added successfully with userId:\", data.userId);\n    revalidatePath('/book');\n    revalidatePath('/admin');\n    return { success: true, message: 'Solicitud de cita enviada con éxito. Nos pondremos en contacto contigo pronto para confirmar.' };\n  } catch (error)\n{\n    console.error(\"[submitAppointmentRequest] Error submitting appointment to Firestore:\", error);\n    return { success: false, message: 'Error al enviar la solicitud de cita. Por favor, inténtalo de nuevo.' };\n  }\n}\n\nexport async function getAppointments(): Promise<Appointment[]> {\n  // console.log(\"Admin: Attempting to fetch appointments from Firestore (with orderBy)...\");\n  try {\n    const qAppointments = query(\n      appointmentsCollectionRef,\n      orderBy('preferredDate', 'desc'),\n      orderBy('createdAt', 'desc')\n    );\n    // console.log(\"Admin: Using query with orderBy('preferredDate', 'desc'), orderBy('createdAt', 'desc').\");\n\n    const appointmentSnapshot = await getDocs(qAppointments);\n    // console.log(`Admin: Found ${appointmentSnapshot.docs.length} appointment documents in total.`);\n\n    if (appointmentSnapshot.empty) {\n      // console.warn(\"Admin: No appointments matched the query. This could be due to Firestore security rules or no appointments existing.\");\n      return [];\n    }\n\n    const userIds = [...new Set(appointmentSnapshot.docs.map(docSnap => docSnap.data().userId as string).filter(id => !!id))];\n    let usersMap: Map<string, { fullName?: string; email?: string; phoneNumber?: string }> = new Map();\n\n    if (userIds.length > 0) {\n      const MAX_USER_IDS_PER_QUERY = 30; // Firestore 'in' query limit\n      const userBatches: string[][] = [];\n      for (let i = 0; i < userIds.length; i += MAX_USER_IDS_PER_QUERY) {\n        userBatches.push(userIds.slice(i, i + MAX_USER_IDS_PER_QUERY));\n      }\n\n      for (const batchUserIds of userBatches) {\n        if (batchUserIds.length === 0) continue; // Skip empty batches\n        // Assuming user documents have a 'uid' field that matches the userId from appointments\n        const qUsers = query(collection(firestore, 'users'), where('uid', 'in', batchUserIds));\n        const userSnapshot = await getDocs(qUsers);\n        userSnapshot.docs.forEach(docSnap => {\n          const userData = docSnap.data();\n          usersMap.set(userData.uid, { // Ensure you are mapping by the correct field (e.g. docSnap.id or userData.uid)\n            fullName: userData.fullName,\n            email: userData.email,\n            phoneNumber: userData.phoneNumber\n          });\n        });\n      }\n    }\n    // console.log(`Admin: Fetched details for ${usersMap.size} users.`);\n\n    const appointments = appointmentSnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      let preferredDateISO: string;\n      let createdAtISO: string;\n\n      if (data.preferredDate && typeof data.preferredDate.toDate === 'function') {\n        preferredDateISO = data.preferredDate.toDate().toISOString();\n      } else {\n        // console.warn(`Admin: Appointment ${docSnap.id} has invalid or missing preferredDate. Firestore data:`, data.preferredDate);\n        preferredDateISO = new Date(0).toISOString();\n      }\n\n      if (data.createdAt && typeof data.createdAt.toDate === 'function') {\n        createdAtISO = data.createdAt.toDate().toISOString();\n      } else {\n        // console.warn(`Admin: Appointment ${docSnap.id} has invalid or missing createdAt. Firestore data:`, data.createdAt);\n        createdAtISO = new Date(0).toISOString();\n      }\n\n      const userDetails = usersMap.get(data.userId) || {};\n\n      const appointment: Appointment = {\n        id: docSnap.id,\n        userId: data.userId || 'Unknown User',\n        userName: userDetails.fullName || 'Nombre no disponible',\n        userEmail: userDetails.email || 'Email no disponible',\n        userPhone: userDetails.phoneNumber || 'Teléfono no disponible',\n        preferredDate: preferredDateISO,\n        preferredTime: data.preferredTime || 'N/A',\n        services: Array.isArray(data.services) ? data.services : [],\n        message: data.message || '',\n        status: data.status || 'unknown',\n        createdAt: createdAtISO,\n      };\n      return appointment;\n    });\n    // console.log(`Admin: Successfully mapped ${appointments.length} appointments.`);\n    return appointments;\n\n  } catch (error: any) {\n    console.error(\"Admin: Error fetching or mapping appointments from Firestore:\", error);\n     if (error.code === 'failed-precondition') {\n        console.error(\"IMPORTANT: Firestore 'failed-precondition' error for admin appointments query. This OFTEN means a composite index is required for your query (e.g., for orderBy clauses on 'preferredDate' and 'createdAt'). Check the DETAILED error message in the Firebase/Next.js server console. It usually provides a link to create the missing index.\");\n    } else {\n        console.error(\"An unexpected error occurred while fetching admin appointments:\", error.message, error.stack);\n    }\n    return [];\n  }\n}\n\nexport async function getUserAppointments(userId: string): Promise<Appointment[]> {\n  console.log(`[getUserAppointments] Top: Attempting to fetch appointments for user ID: ${userId}`);\n  if (!userId) {\n    console.warn(\"[getUserAppointments] Called with no userId. Returning empty array.\");\n    return [];\n  }\n  try {\n    console.log(`[getUserAppointments] Constructing query for 'appointments', where 'userId' == '${userId}', orderBy 'preferredDate' asc, 'createdAt' desc.`);\n    const qUserAppointments = query(\n      appointmentsCollectionRef,\n      where('userId', '==', userId),\n      orderBy('preferredDate', 'asc'), \n      orderBy('createdAt', 'desc')\n    );\n\n    console.log(`[getUserAppointments] Executing query...`);\n    const appointmentSnapshot = await getDocs(qUserAppointments);\n    console.log(`[getUserAppointments] Query executed. Found ${appointmentSnapshot.docs.length} appointment documents for user ${userId}.`);\n\n    if (appointmentSnapshot.empty) {\n      console.log(`[getUserAppointments] Snapshot is empty. Will try querying without orderBy to check for data/index issues.`);\n      const qSimpleUserAppointments = query(appointmentsCollectionRef, where('userId', '==', userId));\n      const simpleSnapshot = await getDocs(qSimpleUserAppointments);\n      if (simpleSnapshot.empty) {\n        console.log(`[getUserAppointments] Simple query (no orderBy) also found 0 documents for user ${userId}. This suggests no data or userId mismatch.`);\n      } else {\n        console.warn(`[getUserAppointments] SIMPLE query (no orderBy) FOUND ${simpleSnapshot.docs.length} documents for user ${userId}. This STRONGLY SUGGESTS an issue with the COMPOSITE INDEX for 'preferredDate' (asc) and 'createdAt'. Please verify the index in Firestore.`);\n        simpleSnapshot.docs.forEach(docSnap => {\n           console.log(`[getUserAppointments] Raw data from SIMPLE query for doc ${docSnap.id}:`, JSON.stringify(docSnap.data()));\n        });\n      }\n      return [];\n    }\n\n    console.log(`[getUserAppointments] Mapping ${appointmentSnapshot.docs.length} documents...`);\n    const appointmentsPromises = appointmentSnapshot.docs.map(async (docSnap) => {\n      const data = docSnap.data();\n      // console.log(`[getUserAppointments] Raw data for doc ${docSnap.id}:`, JSON.stringify(data));\n\n      let preferredDateISO: string;\n      let createdAtISO: string;\n\n      if (data.preferredDate && typeof data.preferredDate.toDate === 'function') {\n        preferredDateISO = data.preferredDate.toDate().toISOString();\n      } else {\n        console.warn(`[getUserAppointments] Doc ${docSnap.id} has invalid or missing preferredDate. Firestore data:`, data.preferredDate);\n        preferredDateISO = new Date(0).toISOString();\n      }\n\n      if (data.createdAt && typeof data.createdAt.toDate === 'function') {\n        createdAtISO = data.createdAt.toDate().toISOString();\n      } else {\n        console.warn(`[getUserAppointments] Doc ${docSnap.id} has invalid or missing createdAt. Firestore data:`, data.createdAt);\n        createdAtISO = new Date(0).toISOString();\n      }\n\n      const appointment: Appointment = {\n        id: docSnap.id,\n        userId: data.userId,\n        preferredDate: preferredDateISO,\n        preferredTime: data.preferredTime || 'N/A',\n        services: Array.isArray(data.services) ? data.services : [],\n        message: data.message || '',\n        status: data.status || 'unknown',\n        createdAt: createdAtISO,\n      };\n      // console.log(`[getUserAppointments] Mapped appointment ${docSnap.id}:`, JSON.stringify(appointment));\n      return appointment;\n    });\n\n    const appointments = await Promise.all(appointmentsPromises);\n    console.log(`[getUserAppointments] Successfully mapped ${appointments.length} appointments for user ${userId}. Final appointments count: ${appointments.length}`);\n    // console.log(`[getUserAppointments] Final appointments data:`, JSON.stringify(appointments));\n    return appointments;\n\n  } catch (error: any) {\n    console.error(`[getUserAppointments] Error fetching appointments for user ${userId}:`, error.message);\n    if (error.code === 'failed-precondition') {\n      console.error(`[getUserAppointments] Firestore 'failed-precondition' error. A composite index on 'userId' (asc), 'preferredDate' (asc), 'createdAt' (desc) might be required in the 'appointments' collection. Check Firestore console for index suggestions, or the link usually provided in the detailed error message in the Firebase/Next.js server console. Error details: ${error.toString()}`);\n    } else if (error.code === 'permission-denied') {\n      console.error(\"[getUserAppointments] Firestore 'permission-denied' error. Check your Firestore security rules to ensure the authenticated user has read access to their appointments.\");\n    } else {\n      console.error(\"[getUserAppointments] An unexpected error occurred:\", error);\n    }\n    return [];\n  }\n}\n\n\nexport async function updateAppointmentStatus(\n  appointmentId: string,\n  newStatus: 'pending' | 'confirmed' | 'cancelled' | 'completed',\n  currentUserId?: string // Optional: Used for client-side cancellation validation\n) {\n  console.log(`[updateAppointmentStatus] Called for ID: ${appointmentId} to status: ${newStatus}. CurrentUserID: ${currentUserId}`);\n  try {\n    const appointmentDocRef = doc(firestore, 'appointments', appointmentId);\n\n    if (currentUserId && newStatus === 'cancelled') {\n      // This block handles cancellation attempts by a user (not admin)\n      const appointmentSnap = await getDoc(appointmentDocRef);\n      if (!appointmentSnap.exists()) {\n        console.warn(`[updateAppointmentStatus] Appointment ${appointmentId} not found for user cancellation.`);\n        return { success: false, message: 'La cita no fue encontrada.' };\n      }\n      const appointmentData = appointmentSnap.data();\n      if (appointmentData.userId !== currentUserId) {\n        console.warn(`[updateAppointmentStatus] User ${currentUserId} does not own appointment ${appointmentId} (owner: ${appointmentData.userId}).`);\n        return { success: false, message: 'No tienes permiso para cancelar esta cita.' };\n      }\n      // User can cancel 'pending' or 'confirmed' appointments.\n      if (appointmentData.status !== 'pending' && appointmentData.status !== 'confirmed') {\n        console.warn(`[updateAppointmentStatus] Appointment ${appointmentId} is not 'pending' or 'confirmed' (status: ${appointmentData.status}), cannot be cancelled by user.`);\n        return { success: false, message: 'Solo puedes solicitar cancelar citas que estén pendientes o confirmadas. Para otros casos, contacta al administrador.' };\n      }\n      console.log(`[updateAppointmentStatus] User ${currentUserId} is cancelling their own ${appointmentData.status} appointment ${appointmentId}.`);\n    } else if (currentUserId && newStatus !== 'cancelled') {\n      // User trying to do something other than cancel their own appointment\n      console.warn(`[updateAppointmentStatus] User ${currentUserId} attempted to change status to ${newStatus} for appointment ${appointmentId}. Not allowed through this specific user-facing cancel action.`);\n      return { success: false, message: 'No tienes permiso para realizar esta acción.' };\n    }\n    // If no currentUserId, it's an admin action, allow any status change (handled by admin panel logic)\n\n    await updateDoc(appointmentDocRef, { status: newStatus });\n    console.log(`[updateAppointmentStatus] Appointment ${appointmentId} status updated to ${newStatus} in Firestore.`);\n    revalidatePath('/admin'); // For admin panel\n    revalidatePath('/book');  // For user's \"My Appointments\" tab\n    return { success: true, message: `Estado de la cita actualizado a ${newStatus}.` };\n  } catch (error) {\n    console.error(`[updateAppointmentStatus] Error updating appointment ${appointmentId} status in Firestore:`, error);\n    return { success: false, message: 'Error al actualizar el estado de la cita.' };\n  }\n}\n\n\nexport async function getBookedSlotsForDate(date: Date): Promise<string[]> {\n  try {\n    const targetDay = new Date(date);\n    targetDay.setHours(0,0,0,0);\n\n    const q = query(\n      appointmentsCollectionRef,\n      where('preferredDate', '==', Timestamp.fromDate(targetDay)),\n      where('status', 'in', ['pending', 'confirmed'])\n    );\n    const querySnapshot = await getDocs(q);\n    const bookedSlots = querySnapshot.docs.map(docSnap => docSnap.data().preferredTime as string);\n    return bookedSlots;\n  } catch (error) {\n    console.error(\"Error fetching booked slots:\", error);\n    return [];\n  }\n}\n\n\n// --- AI Style Advice Actions ---\nexport async function getAIStyleAdvice(data: StyleAdvisorFormValues) {\n  try {\n    const recommendation = await getStyleRecommendationWithServices({\n      hairType: data.hairType,\n      faceShape: data.faceShape,\n      preferences: data.stylePreferences,\n    });\n    return { success: true, data: recommendation };\n  } catch (error) {\n    console.error('Error getting AI style advice:', error);\n    return { success: false, message: 'Failed to get style advice. Please try again later.' };\n  }\n}\n\n// --- Site Settings Actions ---\nexport async function submitSiteSettings(data: SiteSettingsFormValues) {\n  // console.log('Site Settings Update Received by Server Action:', data);\n  revalidatePath('/admin/settings');\n  revalidatePath('/');\n  return { success: true, message: 'Configuración del sitio procesada. Los cambios en nombre y descripción se reflejarán en breve (puede requerir refrescar la página o reconstrucción).' };\n}\n\n\n// --- Product Management Actions ---\nexport async function getProducts(): Promise<Product[]> {\n  try {\n    const querySnapshot = await getDocs(productsCollectionRef);\n    const products = querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      let imageSrcVal = 'https://placehold.co/400x400.png';\n      if (typeof data.imageSrc === 'string' && (data.imageSrc.startsWith('http://') || data.imageSrc.startsWith('https://'))) {\n        imageSrcVal = data.imageSrc;\n      } else if (data.imageSrc && data.imageSrc.trim() !== '') {\n        // console.warn(`Product ID ${docSnap.id} has an imageSrc in Firestore that is not a valid http/https URL or is empty: \"${data.imageSrc}\". Defaulting to placeholder.`);\n      } else if (!data.imageSrc) {\n         // console.warn(`Product ID ${docSnap.id} is missing imageSrc in Firestore. Defaulting to placeholder.`);\n      }\n\n      return {\n        id: docSnap.id,\n        name: data.name || 'Unnamed Product',\n        description: data.description || '',\n        price: data.price || 'ARS$ 0',\n        imageSrc: imageSrcVal,\n        aiHint: data.aiHint || '',\n        stock: typeof data.stock === 'number' ? data.stock : 0,\n        createdAt: data.createdAt ? (data.createdAt as Timestamp).toDate().toISOString() : undefined,\n      } as Product;\n    });\n    return products;\n  } catch (error) {\n    console.error(\"Error fetching products from Firestore:\", error);\n    return [];\n  }\n}\n\nexport async function addProduct(data: ProductFormValues) {\n  try {\n    const productDataToAdd = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      imageSrc: data.imageSrc,\n      aiHint: data.aiHint,\n      stock: data.stock ?? 0,\n      createdAt: Timestamp.now()\n    };\n    const docRef = await addDoc(productsCollectionRef, productDataToAdd);\n    const newProduct: Product = {\n      id: docRef.id,\n      ...productDataToAdd,\n      createdAt: productDataToAdd.createdAt.toDate().toISOString(),\n    };\n    revalidatePath('/products');\n    revalidatePath('/admin/settings');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto añadido con éxito a Firestore.', product: newProduct };\n  } catch (error) {\n    console.error(\"Error adding product to Firestore:\", error);\n    return { success: false, message: 'Error al añadir el producto a Firestore. Inténtalo de nuevo.' };\n  }\n}\n\nexport async function updateProduct(data: ProductFormValues) {\n  if (!data.id) {\n    return { success: false, message: 'Product ID is missing for update.' };\n  }\n  try {\n    const productDocRef = doc(firestore, 'products', data.id);\n    const productDataToUpdate = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      imageSrc: data.imageSrc,\n      aiHint: data.aiHint,\n      stock: data.stock ?? 0,\n    };\n    await updateDoc(productDocRef, productDataToUpdate);\n    const updatedDocSnap = await getDoc(productDocRef);\n    if (!updatedDocSnap.exists()) {\n        return { success: false, message: 'Failed to retrieve updated product.' };\n    }\n    const updatedData = updatedDocSnap.data();\n    let imageSrcVal = 'https://placehold.co/400x400.png';\n    if (typeof updatedData.imageSrc === 'string' && (updatedData.imageSrc.startsWith('http://') || updatedData.imageSrc.startsWith('https://'))) {\n        imageSrcVal = updatedData.imageSrc;\n    }\n    const updatedProduct: Product = {\n      id: updatedDocSnap.id,\n      name: updatedData.name,\n      description: updatedData.description,\n      price: updatedData.price,\n      imageSrc: imageSrcVal,\n      aiHint: updatedData.aiHint,\n      stock: updatedData.stock,\n      createdAt: updatedData.createdAt ? (updatedData.createdAt as Timestamp).toDate().toISOString() : undefined,\n    };\n    revalidatePath('/products');\n    revalidatePath('/admin/settings');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto actualizado con éxito.', product: updatedProduct };\n  } catch (error) {\n    console.error(\"Error updating product in Firestore:\", error);\n    return { success: false, message: 'Error al actualizar el producto. Inténtalo de nuevo.' };\n  }\n}\n\nexport async function deleteProduct(productId: string) {\n  try {\n    const productDocRef = doc(firestore, 'products', productId);\n    await deleteDoc(productDocRef);\n    revalidatePath('/products');\n    revalidatePath('/admin/settings');\n    revalidatePath('/admin');\n    return { success: true, message: 'Producto eliminado con éxito de Firestore.' };\n  } catch (error) {\n    console.error(\"Error deleting product from Firestore:\", error);\n    return { success: false, message: 'Error al eliminar el producto de Firestore. Inténtalo de nuevo.' };\n  }\n}\n\n\n// --- Service Management Actions ---\nexport async function getServices(): Promise<Service[]> {\n  try {\n    const q = query(servicesCollectionRef, orderBy('name', 'asc'));\n    const querySnapshot = await getDocs(q);\n    const services = querySnapshot.docs.map(docSnap => {\n      const data = docSnap.data();\n      return {\n        id: docSnap.id,\n        name: data.name || 'Unnamed Service',\n        description: data.description || '',\n        price: data.price || 'ARS$ 0',\n        createdAt: data.createdAt ? (data.createdAt as Timestamp).toDate().toISOString() : undefined,\n      } as Service;\n    });\n    return services;\n  } catch (error) {\n    console.error(\"Error fetching services from Firestore:\", error);\n    return [];\n  }\n}\n\nexport async function addService(data: ServiceFormValues) {\n  try {\n    const serviceDataToAdd = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n      createdAt: Timestamp.now()\n    };\n    const docRef = await addDoc(servicesCollectionRef, serviceDataToAdd);\n    const newService: Service = {\n      id: docRef.id,\n      ...serviceDataToAdd,\n      createdAt: serviceDataToAdd.createdAt.toDate().toISOString(),\n    };\n    revalidatePath('/admin/settings');\n    revalidatePath('/book');\n    return { success: true, message: 'Servicio añadido con éxito.', service: newService };\n  } catch (error) {\n    console.error(\"Error adding service to Firestore:\", error);\n    return { success: false, message: 'Error al añadir el servicio.' };\n  }\n}\n\nexport async function updateService(data: ServiceFormValues) {\n  if (!data.id) {\n    return { success: false, message: 'Service ID is missing for update.' };\n  }\n  try {\n    const serviceDocRef = doc(firestore, 'services', data.id);\n    const serviceDataToUpdate = {\n      name: data.name,\n      description: data.description,\n      price: data.price,\n    };\n    await updateDoc(serviceDocRef, serviceDataToUpdate);\n\n    const updatedDocSnap = await getDoc(serviceDocRef);\n     if (!updatedDocSnap.exists()) {\n        return { success: false, message: 'Failed to retrieve updated service.' };\n    }\n    const updatedData = updatedDocSnap.data();\n    const updatedService: Service = {\n      id: updatedDocSnap.id,\n      name: updatedData.name,\n      description: updatedData.description,\n      price: updatedData.price,\n      createdAt: updatedData.createdAt ? (updatedData.createdAt as Timestamp).toDate().toISOString() : undefined,\n    };\n\n    revalidatePath('/admin/settings');\n    revalidatePath('/book');\n    return { success: true, message: 'Servicio actualizado con éxito.', service: updatedService };\n  } catch (error) {\n    console.error(\"Error updating service in Firestore:\", error);\n    return { success: false, message: 'Error al actualizar el servicio.' };\n  }\n}\n\nexport async function deleteService(serviceId: string) {\n  try {\n    const serviceDocRef = doc(firestore, 'services', serviceId);\n    await deleteDoc(serviceDocRef);\n    revalidatePath('/admin/settings');\n    revalidatePath('/book');\n    return { success: true, message: 'Servicio eliminado con éxito.' };\n  } catch (error) {\n    console.error(\"Error deleting service from Firestore:\", error);\n    return { success: false, message: 'Error al eliminar el servicio.' };\n  }\n}\n\n// --- Time Slot Settings Actions ---\nexport async function getTimeSlotSettings(): Promise<TimeSlotSetting[]> {\n  try {\n    const snapshot = await getDocs(timeSlotSettingsCollectionRef);\n    const savedSettingsMap = new Map<string, boolean>();\n    snapshot.forEach(docSnap => {\n      savedSettingsMap.set(docSnap.id, docSnap.data().isActive as boolean);\n    });\n\n    const settings = ALL_TIME_SLOTS.map(time => ({\n      time,\n      isActive: savedSettingsMap.get(time) ?? true,\n    }));\n    return settings;\n  } catch (error) {\n    console.error(\"Error fetching time slot settings:\", error);\n    return ALL_TIME_SLOTS.map(time => ({ time, isActive: true }));\n  }\n}\n\nexport async function updateTimeSlotSetting(time: string, isActive: boolean) {\n  try {\n    const settingDocRef = doc(timeSlotSettingsCollectionRef, time);\n    await setDoc(settingDocRef, { time, isActive });\n    revalidatePath('/admin/settings');\n    revalidatePath('/book');\n    return { success: true, message: `Time slot ${time} ${isActive ? 'activated' : 'deactivated'}.` };\n  } catch (error) {\n    console.error(\"Error updating time slot setting:\", error);\n    return { success: false, message: 'Failed to update time slot setting.' };\n  }\n}\n\n// --- WhatsApp Message Template & Admin Contact Actions ---\nconst DEFAULT_CONFIRMATION_TEMPLATE = `Hola {{clientName}}, tu cita en ${siteConfig.name} para el {{appointmentDate}} a las {{appointmentTime}} ha sido CONFIRMADA. Servicios: {{servicesList}}. ¡Te esperamos!`;\nconst DEFAULT_CANCELLATION_TEMPLATE = `Hola {{clientName}}, lamentamos informarte que tu cita en ${siteConfig.name} para el {{appointmentDate}} a las {{appointmentTime}} (Servicios: {{servicesList}}) ha sido CANCELADA. Por favor, contáctanos si deseas reprogramar.`;\nconst DEFAULT_ADMIN_CONTACT_CANCELLATION_TEMPLATE = `Hola ${siteConfig.name}, quisiera solicitar la cancelación de mi cita.\\nCliente: {{clientName}}\\nFecha: {{appointmentDate}}\\nHora: {{appointmentTime}}\\nServicios: {{servicesList}}\\nGracias.`;\nconst DEFAULT_ADMIN_CONTACT_QUERY_TEMPLATE = `Hola ${siteConfig.name}, tengo una consulta sobre mi cita.\\nCliente: {{clientName}}\\nFecha: {{appointmentDate}}\\nHora: {{appointmentTime}}\\nServicios: {{servicesList}}\\nMi consulta es: [ESCRIBE TU CONSULTA AQUÍ]\\nGracias.`;\n\nexport type MessageTemplateId = 'confirmation' | 'cancellation' | 'adminContactCancellationRequest' | 'adminContactQuery';\n\nexport async function getMessageTemplate(templateId: MessageTemplateId): Promise<string> {\n  try {\n    const templateDocRef = doc(messageTemplatesCollectionRef, templateId);\n    const docSnap = await getDoc(templateDocRef);\n    if (docSnap.exists()) {\n      return docSnap.data().content as string;\n    }\n    // Default templates\n    if (templateId === 'confirmation') return DEFAULT_CONFIRMATION_TEMPLATE;\n    if (templateId === 'cancellation') return DEFAULT_CANCELLATION_TEMPLATE;\n    if (templateId === 'adminContactCancellationRequest') return DEFAULT_ADMIN_CONTACT_CANCELLATION_TEMPLATE;\n    if (templateId === 'adminContactQuery') return DEFAULT_ADMIN_CONTACT_QUERY_TEMPLATE;\n    \n    return `Contenido predeterminado para ${templateId} no encontrado.`;\n  } catch (error) {\n    console.error(`Error fetching message template ${templateId}:`, error);\n    if (templateId === 'confirmation') return DEFAULT_CONFIRMATION_TEMPLATE;\n    if (templateId === 'cancellation') return DEFAULT_CANCELLATION_TEMPLATE;\n    if (templateId === 'adminContactCancellationRequest') return DEFAULT_ADMIN_CONTACT_CANCELLATION_TEMPLATE;\n    if (templateId === 'adminContactQuery') return DEFAULT_ADMIN_CONTACT_QUERY_TEMPLATE;\n    return `Error al cargar la plantilla para ${templateId}.`;\n  }\n}\n\nexport async function updateMessageTemplate(templateId: MessageTemplateId, content: string) {\n  try {\n    const templateDocRef = doc(messageTemplatesCollectionRef, templateId);\n    await setDoc(templateDocRef, { content });\n    revalidatePath('/admin/settings');\n    return { success: true, message: `Plantilla de mensaje de ${templateId} actualizada.` };\n  } catch (error) {\n    console.error(`Error updating message template ${templateId}:`, error);\n    return { success: false, message: `Error al actualizar la plantilla de ${templateId}.` };\n  }\n}\n\nexport async function getAdminPhoneNumber(): Promise<string | null> {\n  try {\n    const contactDetailsDocRef = doc(appSettingsCollectionRef, 'contactDetails');\n    const docSnap = await getDoc(contactDetailsDocRef);\n    if (docSnap.exists() && docSnap.data().adminPhoneNumber) {\n      return docSnap.data().adminPhoneNumber as string;\n    }\n    return null; \n  } catch (error) {\n    console.error(\"Error fetching admin phone number:\", error);\n    return null;\n  }\n}\n\nexport async function updateAdminPhoneNumber(phoneNumber: string) {\n  try {\n    const contactDetailsDocRef = doc(appSettingsCollectionRef, 'contactDetails');\n    // Basic cleaning: remove non-digits. Could be more sophisticated.\n    const cleanedPhoneNumber = phoneNumber.replace(/\\D/g, ''); \n    \n    // Basic validation for Argentinian numbers, e.g., must start with 54 and have a certain length.\n    // This is a very simplified validation.\n    if (!cleanedPhoneNumber.startsWith('54') || cleanedPhoneNumber.length < 11 ) { // e.g. 5491123456789 (12 digits) or 542211234567 (11 digits)\n        // Returning a specific message, but ideally the client-side form should handle this.\n        // return { success: false, message: 'El número de teléfono debe ser un número argentino válido (ej: 54911... o 5411...). Asegúrate de incluir el código de país (54) y el de área.' };\n    }\n\n    await setDoc(contactDetailsDocRef, { adminPhoneNumber: phoneNumber }, { merge: true }); // Save the raw number provided by admin\n    revalidatePath('/admin/settings');\n    return { success: true, message: 'Número de teléfono del administrador actualizado.' };\n  } catch (error) {\n    console.error(\"Error updating admin phone number:\", error);\n    return { success: false, message: 'Error al actualizar el número de teléfono del administrador.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;IAsEsB;IAgDA;IAuBA;IA8CA;IA+FA;IAyFA;IA8CA;IAqBA;IAeA;IASA;IAgCA;IA2BA;IA4CA;IAgBA;IAqBA;IAuBA;IAmCA;IAcA;IAmBA;IAqBA;IAwBA;IAYA;IAcA","debugId":null}},
    {"offset": {"line": 692, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/constants.ts"],"sourcesContent":["// src/lib/constants.ts\nexport const ALL_TIME_SLOTS = [\n  \"09:00 AM\", \"09:30 AM\", \"10:00 AM\", \"10:30 AM\", \"11:00 AM\", \"11:30 AM\",\n  \"12:00 PM\", \"12:30 PM\", \"01:00 PM\", \"01:30 PM\", \"02:00 PM\", \"02:30 PM\",\n  \"03:00 PM\", \"03:30 PM\", \"04:00 PM\", \"04:30 PM\", \"05:00 PM\", \"05:30 PM\",\n  \"06:00 PM\", \"06:30 PM\", \"07:00 PM\"\n];\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;AAChB,MAAM,iBAAiB;IAC5B;IAAY;IAAY;IAAY;IAAY;IAAY;IAC5D;IAAY;IAAY;IAAY;IAAY;IAAY;IAC5D;IAAY;IAAY;IAAY;IAAY;IAAY;IAC5D;IAAY;IAAY;CACzB","debugId":null}},
    {"offset": {"line": 725, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 793, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 829, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/settings/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel, \n  FormMessage,\n} from '@/components/ui/form';\nimport { PageHeader } from '@/components/page-header';\nimport { useAuth } from '@/context/AuthContext';\nimport { siteSettingsSchema, type SiteSettingsFormValues, serviceSchema, type ServiceFormValues } from '@/lib/schemas';\nimport { \n  submitSiteSettings, \n  getServices, \n  addService, \n  updateService, \n  deleteService, \n  type Service,\n  getTimeSlotSettings,\n  updateTimeSlotSetting,\n  type TimeSlotSetting,\n  getMessageTemplate,\n  updateMessageTemplate,\n  getAdminPhoneNumber,\n  updateAdminPhoneNumber,\n  type MessageTemplateId,\n} from '@/app/actions';\nimport { ALL_TIME_SLOTS } from '@/lib/constants';\nimport { useToast } from '@/hooks/use-toast';\nimport { siteConfig } from '@/config/site';\nimport { Loader2, SettingsIcon, PlusCircle, Edit3, Trash2, PackageSearch, ClockIcon, Check, X, MessageSquareIcon, InfoIcon, PhoneIcon } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Switch } from '@/components/ui/switch';\nimport { Label as UiLabel } from '@/components/ui/label'; \n\nexport default function AdminSettingsPage() {\n  const { currentUser, loading: authLoading } = useAuth();\n  const router = useRouter();\n  const { toast } = useToast();\n  const [isSubmittingSettings, setIsSubmittingSettings] = useState(false);\n\n  // States for Service Management\n  const [services, setServices] = useState<Service[]>([]);\n  const [isLoadingServices, setIsLoadingServices] = useState(false);\n  const [isSubmittingService, setIsSubmittingService] = useState(false);\n  const [showAddEditServiceForm, setShowAddEditServiceForm] = useState(false);\n  const [editingService, setEditingService] = useState<Service | null>(null);\n\n  // States for Time Slot Management\n  const [timeSlotSettingsList, setTimeSlotSettingsList] = useState<TimeSlotSetting[]>([]);\n  const [isLoadingTimeSlots, setIsLoadingTimeSlots] = useState(false);\n  const [isUpdatingTimeSlot, setIsUpdatingTimeSlot] = useState<string | null>(null);\n\n  // States for WhatsApp Message Templates & Admin Contact\n  const [confirmationTemplate, setConfirmationTemplate] = useState('');\n  const [cancellationTemplate, setCancellationTemplate] = useState('');\n  const [adminContactCancellationTemplate, setAdminContactCancellationTemplate] = useState('');\n  const [adminContactQueryTemplate, setAdminContactQueryTemplate] = useState('');\n  const [isLoadingTemplates, setIsLoadingTemplates] = useState(false);\n  const [isSubmittingTemplate, setIsSubmittingTemplate] = useState<MessageTemplateId | null>(null);\n  \n  const [adminPhoneNumber, setAdminPhoneNumber] = useState('');\n  const [isLoadingAdminPhone, setIsLoadingAdminPhone] = useState(false);\n  const [isSubmittingAdminPhone, setIsSubmittingAdminPhone] = useState(false);\n\n\n  const availablePlaceholders = ['{{clientName}}', '{{appointmentDate}}', '{{appointmentTime}}', '{{siteName}}', '{{servicesList}}'];\n\n\n  const settingsForm = useForm<SiteSettingsFormValues>({\n    resolver: zodResolver(siteSettingsSchema),\n    defaultValues: {\n      siteName: siteConfig.name,\n      siteDescription: siteConfig.description,\n    },\n  });\n\n  const serviceForm = useForm<ServiceFormValues>({\n    resolver: zodResolver(serviceSchema),\n    defaultValues: {\n      name: '',\n      description: '',\n      price: 'ARS$ ',\n    },\n  });\n\n  useEffect(() => {\n    if (!authLoading && !currentUser) {\n      router.push('/login?redirect=/admin/settings');\n    } else if (!authLoading && currentUser && currentUser.email !== 'joacoadmin@admin.com') {\n      router.push('/admin'); \n      toast({\n        title: 'Acceso Denegado',\n        description: 'No tienes permiso para acceder a esta página.',\n        variant: 'destructive',\n      });\n    }\n  }, [currentUser, authLoading, router, toast]);\n\n  useEffect(() => {\n    settingsForm.reset({\n      siteName: siteConfig.name,\n      siteDescription: siteConfig.description,\n    });\n  }, [siteConfig.name, siteConfig.description, settingsForm]);\n\n\n  async function fetchAdminServices() {\n    setIsLoadingServices(true);\n    try {\n      const fetchedServices = await getServices();\n      setServices(fetchedServices.sort((a, b) => {\n        const dateA = a.createdAt ? new Date(a.createdAt).getTime() : 0;\n        const dateB = b.createdAt ? new Date(b.createdAt).getTime() : 0;\n        return dateB - dateA; \n      }));\n    } catch (error) {\n      toast({ title: 'Error', description: 'No se pudieron cargar los servicios.', variant: 'destructive' });\n    } finally {\n      setIsLoadingServices(false);\n    }\n  }\n\n  async function fetchTimeSlotSettingsAdmin() {\n    setIsLoadingTimeSlots(true);\n    try {\n      const fetchedSettings = await getTimeSlotSettings();\n      setTimeSlotSettingsList(fetchedSettings);\n    } catch (error) {\n      toast({ title: 'Error', description: 'No se pudieron cargar los horarios.', variant: 'destructive' });\n    } finally {\n      setIsLoadingTimeSlots(false);\n    }\n  }\n\n  async function fetchAdminContactSettings() {\n    setIsLoadingAdminPhone(true);\n    try {\n      const phone = await getAdminPhoneNumber();\n      if (phone) setAdminPhoneNumber(phone);\n    } catch (error) {\n      toast({ title: 'Error', description: 'No se pudo cargar el número de teléfono del administrador.', variant: 'destructive' });\n    } finally {\n      setIsLoadingAdminPhone(false);\n    }\n  }\n\n  async function fetchMessageTemplates() {\n    setIsLoadingTemplates(true);\n    try {\n      const [\n        confTemplate, \n        cancTemplate,\n        adminCancTemplate,\n        adminQueryTemplate\n      ] = await Promise.all([\n        getMessageTemplate('confirmation'),\n        getMessageTemplate('cancellation'),\n        getMessageTemplate('adminContactCancellationRequest'),\n        getMessageTemplate('adminContactQuery')\n      ]);\n      setConfirmationTemplate(confTemplate);\n      setCancellationTemplate(cancTemplate);\n      setAdminContactCancellationTemplate(adminCancTemplate);\n      setAdminContactQueryTemplate(adminQueryTemplate);\n\n    } catch (error) {\n      toast({ title: 'Error', description: 'No se pudieron cargar las plantillas de mensajes.', variant: 'destructive' });\n    } finally {\n      setIsLoadingTemplates(false);\n    }\n  }\n\n  useEffect(() => {\n    if (currentUser?.email === 'joacoadmin@admin.com') {\n      fetchAdminServices();\n      fetchTimeSlotSettingsAdmin();\n      fetchMessageTemplates();\n      fetchAdminContactSettings();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentUser]);\n\n\n  async function onSiteSettingsSubmit(data: SiteSettingsFormValues) {\n    setIsSubmittingSettings(true);\n    const result = await submitSiteSettings(data);\n    if (result.success) {\n      toast({ title: '¡Configuración Guardada!', description: result.message });\n      // siteConfig.name = data.siteName; // This won't work as siteConfig is not reactive\n      // siteConfig.description = data.siteDescription; // Update local config if necessary or re-fetch\n      settingsForm.reset({ siteName: data.siteName, siteDescription: data.siteDescription });\n    } else {\n      toast({ title: 'Error', description: result.message || 'No se pudo guardar la configuración.', variant: 'destructive' });\n    }\n    setIsSubmittingSettings(false);\n  }\n\n  const handleAddNewServiceClick = () => {\n    setEditingService(null);\n    serviceForm.reset({\n      name: '',\n      description: '',\n      price: 'ARS$ ',\n    });\n    setShowAddEditServiceForm(true);\n  };\n\n  const handleEditServiceClick = (service: Service) => {\n    setEditingService(service);\n    serviceForm.reset({\n      id: service.id,\n      name: service.name,\n      description: service.description,\n      price: service.price,\n    });\n    setShowAddEditServiceForm(true);\n  };\n\n  async function onServiceFormSubmit(data: ServiceFormValues) {\n    setIsSubmittingService(true);\n    let result;\n    if (editingService && data.id) {\n      result = await updateService(data);\n    } else {\n      result = await addService(data);\n    }\n\n    if (result.success && result.service) {\n      toast({ title: editingService ? '¡Servicio Actualizado!' : '¡Servicio Añadido!', description: result.message });\n      fetchAdminServices(); \n      serviceForm.reset({name: '', description: '', price: 'ARS$ '});\n      setShowAddEditServiceForm(false);\n      setEditingService(null);\n    } else {\n      toast({ title: 'Error', description: result.message || 'No se pudo guardar el servicio.', variant: 'destructive' });\n    }\n    setIsSubmittingService(false);\n  }\n\n  async function handleDeleteService(serviceId: string) {\n    const result = await deleteService(serviceId);\n    if (result.success) {\n      toast({ title: '¡Servicio Eliminado!', description: result.message });\n      setServices(prev => prev.filter(s => s.id !== serviceId));\n    } else {\n      toast({ title: 'Error', description: result.message || 'No se pudo eliminar el servicio.', variant: 'destructive' });\n    }\n  }\n\n  async function handleTimeSlotToggle(time: string, isActive: boolean) {\n    setIsUpdatingTimeSlot(time);\n    const result = await updateTimeSlotSetting(time, isActive);\n    if (result.success) {\n      toast({ title: 'Horario Actualizado', description: `El horario ${time} ahora está ${isActive ? 'activo' : 'inactivo'}.` });\n      setTimeSlotSettingsList(prev => \n        prev.map(slot => slot.time === time ? { ...slot, isActive } : slot)\n      );\n    } else {\n      toast({ title: 'Error', description: result.message || 'No se pudo actualizar el horario.', variant: 'destructive' });\n       fetchTimeSlotSettingsAdmin();\n    }\n    setIsUpdatingTimeSlot(null);\n  }\n\n  async function handleSaveTemplate(templateId: MessageTemplateId) {\n    setIsSubmittingTemplate(templateId);\n    let content = '';\n    switch (templateId) {\n      case 'confirmation': content = confirmationTemplate; break;\n      case 'cancellation': content = cancellationTemplate; break;\n      case 'adminContactCancellationRequest': content = adminContactCancellationTemplate; break;\n      case 'adminContactQuery': content = adminContactQueryTemplate; break;\n    }\n    const result = await updateMessageTemplate(templateId, content);\n    if (result.success) {\n      toast({ title: 'Plantilla Guardada', description: result.message });\n    } else {\n      toast({ title: 'Error', description: result.message || 'No se pudo guardar la plantilla.', variant: 'destructive' });\n    }\n    setIsSubmittingTemplate(null);\n  }\n\n  async function handleSaveAdminPhoneNumber() {\n    setIsSubmittingAdminPhone(true);\n    // Basic validation for Argentinian numbers (can be improved)\n    const cleanedPhone = adminPhoneNumber.replace(/\\D/g, '');\n    if (!cleanedPhone.startsWith('54') || cleanedPhone.length < 11 ) { // e.g. 54911... or 5411...\n         toast({ title: 'Número Inválido', description: 'El formato debe ser Ej: 5491123456789 o 542211234567. Incluir código de país y área sin \"+\" ni espacios.', variant: 'destructive'});\n         setIsSubmittingAdminPhone(false);\n         return;\n    }\n\n    const result = await updateAdminPhoneNumber(adminPhoneNumber);\n    if (result.success) {\n      toast({ title: 'Número Guardado', description: result.message });\n    } else {\n      toast({ title: 'Error', description: result.message || 'No se pudo guardar el número.', variant: 'destructive' });\n    }\n    setIsSubmittingAdminPhone(false);\n  }\n  \n  if (authLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-12 flex justify-center items-center min-h-[calc(100vh-10rem)]\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n      </div>\n    );\n  }\n\n  if (!currentUser || currentUser.email !== 'joacoadmin@admin.com') {\n    return (\n      <div className=\"container mx-auto px-4 py-12 text-center\">\n        <p>Redirigiendo...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-12\">\n      <PageHeader\n        title=\"Configuración del Sitio\"\n        description=\"Administra la configuración general, servicios, horarios y mensajes de tu aplicación.\"\n        titleClassName=\"font-sans\"\n      />\n\n      <div className=\"max-w-2xl mx-auto space-y-8\">\n        {/* General Site Info */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <SettingsIcon className=\"h-5 w-5 mr-2 text-primary\" />\n              Información General del Sitio\n            </CardTitle>\n            <CardDescription>\n              Modifica el nombre y la descripción de tu sitio web. Estos cambios se reflejarán globalmente.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Form {...settingsForm}>\n              <form onSubmit={settingsForm.handleSubmit(onSiteSettingsSubmit)} className=\"space-y-6\">\n                <FormField\n                  control={settingsForm.control}\n                  name=\"siteName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Nombre del Sitio</FormLabel>\n                      <FormControl><Input placeholder=\"Ej: JoacoBarber\" {...field} /></FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={settingsForm.control}\n                  name=\"siteDescription\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Descripción del Sitio</FormLabel>\n                      <FormControl><Textarea placeholder=\"Ej: La mejor barbería de la ciudad.\" className=\"resize-none\" {...field} /></FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <div className=\"flex justify-end\">\n                  <Button type=\"submit\" disabled={isSubmittingSettings}>\n                    {isSubmittingSettings && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                    Guardar Cambios\n                  </Button>\n                </div>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n\n        {/* Admin Contact Configuration */}\n        <Card>\n            <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                    <PhoneIcon className=\"h-5 w-5 mr-2 text-primary\" />\n                    Contacto del Administrador (WhatsApp)\n                </CardTitle>\n                <CardDescription>\n                    Configura el número de teléfono para que los clientes te contacten por WhatsApp.\n                </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n                {isLoadingAdminPhone ? (\n                    <div className=\"flex justify-center py-4\"><Loader2 className=\"h-6 w-6 animate-spin text-primary\" /></div>\n                ) : (\n                    <div>\n                        <UiLabel htmlFor=\"adminPhoneNumber\" className=\"text-base font-medium\">Número de WhatsApp del Administrador</UiLabel>\n                        <Input\n                            id=\"adminPhoneNumber\"\n                            type=\"tel\"\n                            value={adminPhoneNumber}\n                            onChange={(e) => setAdminPhoneNumber(e.target.value)}\n                            placeholder=\"Ej: 5491123456789 (incluir código de país)\"\n                            className=\"mt-1\"\n                        />\n                         <p className=\"text-xs text-muted-foreground mt-1\">Incluir código de país y área sin el '+' ni espacios. Ej: 5491123456789</p>\n                        <Button \n                            onClick={handleSaveAdminPhoneNumber} \n                            disabled={isSubmittingAdminPhone}\n                            size=\"sm\"\n                            className=\"mt-3\"\n                        >\n                            {isSubmittingAdminPhone && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                            Guardar Número\n                        </Button>\n                    </div>\n                )}\n            </CardContent>\n        </Card>\n\n\n        {/* Services Configuration */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Gestión de Servicios</CardTitle>\n            <CardDescription>Añade, edita o elimina los servicios ofrecidos. Estos servicios se mostrarán en la página de reservas.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            {!showAddEditServiceForm && (\n              <Button onClick={handleAddNewServiceClick} className=\"mb-6 w-full sm:w-auto\">\n                <PlusCircle className=\"mr-2 h-4 w-4\" /> Añadir Nuevo Servicio\n              </Button>\n            )}\n\n            {showAddEditServiceForm && (\n              <Card className=\"mb-6 bg-secondary/30 p-0\">\n                <CardHeader className=\"p-4\">\n                  <CardTitle className=\"font-sans text-lg\">\n                    {editingService ? 'Editar Servicio' : 'Nuevo Servicio'}\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-4\">\n                  <Form {...serviceForm}>\n                    <form onSubmit={serviceForm.handleSubmit(onServiceFormSubmit)} className=\"space-y-4\">\n                      <FormField control={serviceForm.control} name=\"name\" render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Nombre del Servicio</FormLabel>\n                          <FormControl><Input placeholder=\"Ej: Corte Clásico\" {...field} /></FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )} />\n                      <FormField control={serviceForm.control} name=\"description\" render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Descripción</FormLabel>\n                          <FormControl><Textarea placeholder=\"Describe el servicio...\" {...field} rows={3} /></FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )} />\n                      <FormField control={serviceForm.control} name=\"price\" render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Precio</FormLabel>\n                          <FormControl><Input placeholder=\"ARS$ 1500\" {...field} /></FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )} />\n                      <div className=\"flex justify-end space-x-2 pt-2\">\n                        <Button type=\"button\" variant=\"outline\" onClick={() => { setShowAddEditServiceForm(false); setEditingService(null); serviceForm.reset({name: '', description: '', price: 'ARS$ '}); }}>Cancelar</Button>\n                        <Button type=\"submit\" disabled={isSubmittingService}>\n                          {isSubmittingService && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                          {editingService ? 'Actualizar Servicio' : 'Añadir Servicio'}\n                        </Button>\n                      </div>\n                    </form>\n                  </Form>\n                </CardContent>\n              </Card>\n            )}\n            \n            <h3 className=\"text-lg font-semibold mb-3 mt-4 text-foreground/90\">Servicios Actuales</h3>\n            {isLoadingServices ? (\n              <div className=\"flex justify-center py-6\"><Loader2 className=\"h-8 w-8 animate-spin text-primary\" /></div>\n            ) : services.length === 0 ? (\n              <div className=\"text-center py-10 text-muted-foreground rounded-md border border-dashed p-8\">\n                <PackageSearch className=\"h-12 w-12 mx-auto mb-3 text-muted-foreground/70\" />\n                <p className=\"font-medium\">No hay servicios configurados.</p>\n                <p className=\"text-sm\">Empieza añadiendo uno nuevo para que aparezcan en la página de reservas.</p>\n              </div>\n            ) : (\n              <ScrollArea className={showAddEditServiceForm ? \"max-h-[250px] overflow-y-auto border rounded-md p-1\" : \"max-h-[400px] overflow-y-auto border rounded-md p-1\"}>\n                <div className=\"space-y-3 p-3\">\n                  {services.map(service => (\n                    <Card key={service.id} className=\"p-4 shadow-sm bg-card hover:bg-muted/20\">\n                        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n                            <div className=\"flex-grow min-w-0 mb-2 sm:mb-0\">\n                                <p className=\"font-semibold text-card-foreground truncate\" title={service.name}>{service.name}</p>\n                                <p className=\"text-sm text-muted-foreground truncate\" title={service.description}>{service.description}</p>\n                                <p className=\"text-sm text-primary font-medium\">{service.price}</p>\n                            </div>\n                            <div className=\"flex-shrink-0 space-x-2 flex\">\n                                <Button variant=\"ghost\" size=\"sm\" className=\"text-blue-500 hover:text-blue-700 hover:bg-blue-500/10 px-2 py-1 h-auto\" onClick={() => handleEditServiceClick(service)}>\n                                <Edit3 className=\"h-4 w-4 mr-1 sm:mr-0\" /> <span className=\"sm:hidden\">Editar</span>\n                                </Button> \n                                <Dialog>\n                                <DialogTrigger asChild>\n                                    <Button variant=\"ghost\" size=\"sm\" className=\"text-destructive hover:text-red-700 hover:bg-red-500/10 px-2 py-1 h-auto\">\n                                    <Trash2 className=\"h-4 w-4 mr-1 sm:mr-0\" /> <span className=\"sm:hidden\">Eliminar</span>\n                                    </Button>\n                                </DialogTrigger>\n                                <DialogContent className=\"sm:max-w-md\">\n                                    <DialogHeader>\n                                    <DialogTitle>Confirmar Eliminación</DialogTitle>\n                                    <DialogDescription>\n                                        ¿Estás seguro de que quieres eliminar el servicio \"{service.name}\"? Esta acción no se puede deshacer.\n                                    </DialogDescription>\n                                    </DialogHeader>\n                                    <DialogFooter className=\"sm:justify-end\">\n                                    <DialogClose asChild>\n                                        <Button type=\"button\" variant=\"outline\">Cancelar</Button>\n                                    </DialogClose>\n                                    <DialogClose asChild>\n                                        <Button type=\"button\" variant=\"destructive\" onClick={() => handleDeleteService(service.id)}>Eliminar</Button>\n                                    </DialogClose>\n                                    </DialogFooter>\n                                </DialogContent>\n                                </Dialog>\n                            </div>\n                        </div>\n                    </Card>\n                  ))}\n                </div>\n              </ScrollArea>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Business Hours Configuration */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n                <ClockIcon className=\"h-5 w-5 mr-2 text-primary\" />\n                Horarios de Atención\n            </CardTitle>\n            <CardDescription>Define los horarios disponibles para agendar citas. Desactiva los horarios que no estarán disponibles.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            {isLoadingTimeSlots ? (\n              <div className=\"flex justify-center py-6\"><Loader2 className=\"h-8 w-8 animate-spin text-primary\" /></div>\n            ) : timeSlotSettingsList.length === 0 && ALL_TIME_SLOTS.length === 0 ? ( \n              <div className=\"text-center py-10 text-muted-foreground rounded-md border border-dashed p-8\">\n                <ClockIcon className=\"h-12 w-12 mx-auto mb-3 text-muted-foreground/70\" />\n                <p className=\"font-medium\">No hay horarios configurados en el sistema.</p>\n                <p className=\"text-sm\">Contacta a soporte si esto es un error.</p>\n              </div>\n            ) : timeSlotSettingsList.length === 0 && ALL_TIME_SLOTS.length > 0 ? ( \n                 <ScrollArea className=\"max-h-[400px] overflow-y-auto border rounded-md p-1\">\n                    <div className=\"space-y-1 p-3\">\n                      {ALL_TIME_SLOTS.map((slotTime) => (\n                        <div key={slotTime} className=\"flex items-center justify-between p-3 rounded-md hover:bg-muted/30 transition-colors\">\n                          <UiLabel htmlFor={`timeslot-${slotTime.replace(/\\s|:/g, '-')}`} className=\"text-base font-medium text-foreground cursor-pointer\">\n                            {slotTime}\n                          </UiLabel>\n                          <div className=\"flex items-center space-x-2\">\n                            {isUpdatingTimeSlot === slotTime ? (\n                              <Loader2 className=\"h-5 w-5 animate-spin text-primary\" />\n                            ) : (\n                              <Switch\n                                id={`timeslot-${slotTime.replace(/\\s|:/g, '-')}`}\n                                checked={true} \n                                onCheckedChange={(checked) => handleTimeSlotToggle(slotTime, checked)}\n                                aria-label={`Activar o desactivar horario ${slotTime}`}\n                              />\n                            )}\n                            <Check className=\"h-5 w-5 text-green-500\" />\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                </ScrollArea>\n            ) : (\n              <ScrollArea className=\"max-h-[400px] overflow-y-auto border rounded-md p-1\">\n                <div className=\"space-y-1 p-3\">\n                  {timeSlotSettingsList.map((slotSetting) => (\n                    <div key={slotSetting.time} className=\"flex items-center justify-between p-3 rounded-md hover:bg-muted/30 transition-colors\">\n                      <UiLabel htmlFor={`timeslot-${slotSetting.time.replace(/\\s|:/g, '-')}`} className=\"text-base font-medium text-foreground cursor-pointer\">\n                        {slotSetting.time}\n                      </UiLabel>\n                      <div className=\"flex items-center space-x-2\">\n                        {isUpdatingTimeSlot === slotSetting.time ? (\n                          <Loader2 className=\"h-5 w-5 animate-spin text-primary\" />\n                        ) : (\n                           <Switch\n                            id={`timeslot-${slotSetting.time.replace(/\\s|:/g, '-')}`}\n                            checked={slotSetting.isActive}\n                            onCheckedChange={(checked) => handleTimeSlotToggle(slotSetting.time, checked)}\n                            aria-label={`Activar o desactivar horario ${slotSetting.time}`}\n                          />\n                        )}\n                        {slotSetting.isActive ? \n                           <Check className=\"h-5 w-5 text-green-500\" /> : \n                           <X className=\"h-5 w-5 text-destructive\" />\n                        }\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </ScrollArea>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* WhatsApp Messages Configuration */}\n        <Card>\n            <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                    <MessageSquareIcon className=\"h-5 w-5 mr-2 text-primary\" />\n                    Plantillas de Mensajes de WhatsApp\n                </CardTitle>\n                <CardDescription>\n                    Personaliza los mensajes para diferentes interacciones.\n                    Utiliza los marcadores de posición disponibles para incluir detalles dinámicos.\n                </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n                {isLoadingTemplates ? (\n                     <div className=\"flex justify-center py-6\"><Loader2 className=\"h-8 w-8 animate-spin text-primary\" /></div>\n                ) : (\n                    <>\n                        <div className=\"space-y-2\">\n                            <UiLabel htmlFor=\"confirmationTemplate\" className=\"text-base font-medium\">Plantilla de Confirmación de Cita (Admin a Cliente)</UiLabel>\n                            <Textarea\n                                id=\"confirmationTemplate\"\n                                value={confirmationTemplate}\n                                onChange={(e) => setConfirmationTemplate(e.target.value)}\n                                placeholder=\"Escribe tu mensaje de confirmación aquí...\"\n                                rows={5}\n                                className=\"text-sm\"\n                            />\n                            <Button \n                                onClick={() => handleSaveTemplate('confirmation')} \n                                disabled={isSubmittingTemplate === 'confirmation'}\n                                size=\"sm\"\n                                className=\"mt-2\"\n                            >\n                                {isSubmittingTemplate === 'confirmation' && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                                Guardar Confirmación (Admin)\n                            </Button>\n                        </div>\n\n                        <div className=\"space-y-2\">\n                            <UiLabel htmlFor=\"cancellationTemplate\" className=\"text-base font-medium\">Plantilla de Cancelación de Cita (Admin a Cliente)</UiLabel>\n                            <Textarea\n                                id=\"cancellationTemplate\"\n                                value={cancellationTemplate}\n                                onChange={(e) => setCancellationTemplate(e.target.value)}\n                                placeholder=\"Escribe tu mensaje de cancelación aquí...\"\n                                rows={5}\n                                className=\"text-sm\"\n                            />\n                            <Button \n                                onClick={() => handleSaveTemplate('cancellation')} \n                                disabled={isSubmittingTemplate === 'cancellation'}\n                                size=\"sm\"\n                                className=\"mt-2\"\n                            >\n                                {isSubmittingTemplate === 'cancellation' && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                                Guardar Cancelación (Admin)\n                            </Button>\n                        </div>\n\n                         <div className=\"space-y-2\">\n                            <UiLabel htmlFor=\"adminContactCancellationTemplate\" className=\"text-base font-medium\">Plantilla para \"Solicitar Cancelación\" (Cliente a Admin)</UiLabel>\n                            <Textarea\n                                id=\"adminContactCancellationTemplate\"\n                                value={adminContactCancellationTemplate}\n                                onChange={(e) => setAdminContactCancellationTemplate(e.target.value)}\n                                placeholder=\"Mensaje prellenado cuando el cliente quiere cancelar vía WhatsApp...\"\n                                rows={5}\n                                className=\"text-sm\"\n                            />\n                            <Button \n                                onClick={() => handleSaveTemplate('adminContactCancellationRequest')} \n                                disabled={isSubmittingTemplate === 'adminContactCancellationRequest'}\n                                size=\"sm\"\n                                className=\"mt-2\"\n                            >\n                                {isSubmittingTemplate === 'adminContactCancellationRequest' && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                                Guardar Plantilla Cliente-Cancelación\n                            </Button>\n                        </div>\n\n                        <div className=\"space-y-2\">\n                            <UiLabel htmlFor=\"adminContactQueryTemplate\" className=\"text-base font-medium\">Plantilla para \"Hacer Consulta\" (Cliente a Admin)</UiLabel>\n                            <Textarea\n                                id=\"adminContactQueryTemplate\"\n                                value={adminContactQueryTemplate}\n                                onChange={(e) => setAdminContactQueryTemplate(e.target.value)}\n                                placeholder=\"Mensaje prellenado cuando el cliente tiene una consulta vía WhatsApp...\"\n                                rows={5}\n                                className=\"text-sm\"\n                            />\n                            <Button \n                                onClick={() => handleSaveTemplate('adminContactQuery')} \n                                disabled={isSubmittingTemplate === 'adminContactQuery'}\n                                size=\"sm\"\n                                className=\"mt-2\"\n                            >\n                                {isSubmittingTemplate === 'adminContactQuery' && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                                Guardar Plantilla Cliente-Consulta\n                            </Button>\n                        </div>\n                    </>\n                )}\n                 <Card className=\"mt-4 bg-secondary/30\">\n                    <CardHeader className=\"pb-2 pt-3\">\n                        <CardTitle className=\"text-sm font-medium flex items-center\">\n                            <InfoIcon className=\"h-4 w-4 mr-2 text-primary\" />\n                            Marcadores de Posición Disponibles\n                        </CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"pt-0 pb-3\">\n                        <ul className=\"list-disc list-inside text-xs text-muted-foreground space-y-1\">\n                            {availablePlaceholders.map(ph => <li key={ph}><code>{ph}</code></li>)}\n                        </ul>\n                         <p className=\"text-xs text-muted-foreground mt-2\">Para la plantilla \"Hacer Consulta\", el cliente deberá añadir manualmente su pregunta donde dice `[ESCRIBE TU CONSULTA AQUÍ]`.</p>\n                    </CardContent>\n                </Card>\n            </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n    \n"],"names":[],"mappings":"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","debugId":null}}]
}